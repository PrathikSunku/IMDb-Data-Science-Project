{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Filtering out the warnings\n",
    "\n",
    "import warnings\n",
    "\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Importing the required libraries\n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# <font color = blue> IMDb Movie Assignment </font>\n",
    "\n",
    "You have the data for the 100 top-rated movies from the past decade along with various pieces of information about the movie, its actors, and the voters who have rated these movies online. In this assignment, you will try to find some interesting insights into these movies and their voters, using Python."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##  Task 1: Reading the data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- ### Subtask 1.1: Read the Movies Data.\n",
    "\n",
    "Read the movies data file provided and store it in a dataframe `movies`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>title_year</th>\n",
       "      <th>budget</th>\n",
       "      <th>Gross</th>\n",
       "      <th>actor_1_name</th>\n",
       "      <th>actor_2_name</th>\n",
       "      <th>actor_3_name</th>\n",
       "      <th>actor_1_facebook_likes</th>\n",
       "      <th>actor_2_facebook_likes</th>\n",
       "      <th>actor_3_facebook_likes</th>\n",
       "      <th>...</th>\n",
       "      <th>Votes3044M</th>\n",
       "      <th>Votes3044F</th>\n",
       "      <th>Votes45A</th>\n",
       "      <th>Votes45AM</th>\n",
       "      <th>Votes45AF</th>\n",
       "      <th>Votes1000</th>\n",
       "      <th>VotesUS</th>\n",
       "      <th>VotesnUS</th>\n",
       "      <th>content_rating</th>\n",
       "      <th>Country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>La La Land</td>\n",
       "      <td>2016</td>\n",
       "      <td>30000000</td>\n",
       "      <td>151101803</td>\n",
       "      <td>Ryan Gosling</td>\n",
       "      <td>Emma Stone</td>\n",
       "      <td>Amiée Conn</td>\n",
       "      <td>14000</td>\n",
       "      <td>19000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.1</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Zootopia</td>\n",
       "      <td>2016</td>\n",
       "      <td>150000000</td>\n",
       "      <td>341268248</td>\n",
       "      <td>Ginnifer Goodwin</td>\n",
       "      <td>Jason Bateman</td>\n",
       "      <td>Idris Elba</td>\n",
       "      <td>2800</td>\n",
       "      <td>28000.0</td>\n",
       "      <td>27000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.6</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>PG</td>\n",
       "      <td>USA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Lion</td>\n",
       "      <td>2016</td>\n",
       "      <td>12000000</td>\n",
       "      <td>51738905</td>\n",
       "      <td>Dev Patel</td>\n",
       "      <td>Nicole Kidman</td>\n",
       "      <td>Rooney Mara</td>\n",
       "      <td>33000</td>\n",
       "      <td>96000.0</td>\n",
       "      <td>9800.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.9</td>\n",
       "      <td>8.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.9</td>\n",
       "      <td>8.4</td>\n",
       "      <td>7.1</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.0</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>Australia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Arrival</td>\n",
       "      <td>2016</td>\n",
       "      <td>47000000</td>\n",
       "      <td>100546139</td>\n",
       "      <td>Amy Adams</td>\n",
       "      <td>Jeremy Renner</td>\n",
       "      <td>Forest Whitaker</td>\n",
       "      <td>35000</td>\n",
       "      <td>5300.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.3</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.9</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Manchester by the Sea</td>\n",
       "      <td>2016</td>\n",
       "      <td>9000000</td>\n",
       "      <td>47695371</td>\n",
       "      <td>Casey Affleck</td>\n",
       "      <td>Michelle Williams</td>\n",
       "      <td>Kyle Chandler</td>\n",
       "      <td>518</td>\n",
       "      <td>71000.0</td>\n",
       "      <td>3300.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 62 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                   Title  title_year     budget      Gross      actor_1_name  \\\n",
       "0             La La Land        2016   30000000  151101803      Ryan Gosling   \n",
       "1               Zootopia        2016  150000000  341268248  Ginnifer Goodwin   \n",
       "2                   Lion        2016   12000000   51738905         Dev Patel   \n",
       "3                Arrival        2016   47000000  100546139         Amy Adams   \n",
       "4  Manchester by the Sea        2016    9000000   47695371     Casey Affleck   \n",
       "\n",
       "         actor_2_name     actor_3_name  actor_1_facebook_likes  \\\n",
       "0          Emma Stone       Amiée Conn                   14000   \n",
       "1       Jason Bateman       Idris Elba                    2800   \n",
       "2       Nicole Kidman      Rooney Mara                   33000   \n",
       "3       Jeremy Renner  Forest Whitaker                   35000   \n",
       "4  Michelle Williams     Kyle Chandler                     518   \n",
       "\n",
       "   actor_2_facebook_likes  actor_3_facebook_likes  ...  Votes3044M Votes3044F  \\\n",
       "0                 19000.0                     NaN  ...         7.9        7.8   \n",
       "1                 28000.0                 27000.0  ...         7.8        8.1   \n",
       "2                 96000.0                  9800.0  ...         7.9        8.2   \n",
       "3                  5300.0                     NaN  ...         7.8        7.8   \n",
       "4                 71000.0                  3300.0  ...         7.7        7.7   \n",
       "\n",
       "  Votes45A Votes45AM  Votes45AF  Votes1000  VotesUS  VotesnUS  content_rating  \\\n",
       "0      7.6       7.6        7.5        7.1      8.3       8.1           PG-13   \n",
       "1      7.8       7.8        8.1        7.6      8.0       8.0              PG   \n",
       "2      8.0       7.9        8.4        7.1      8.1       8.0           PG-13   \n",
       "3      7.6       7.6        7.7        7.3      8.0       7.9           PG-13   \n",
       "4      7.6       7.6        7.6        7.1      7.9       7.8               R   \n",
       "\n",
       "     Country  \n",
       "0        USA  \n",
       "1        USA  \n",
       "2  Australia  \n",
       "3        USA  \n",
       "4        USA  \n",
       "\n",
       "[5 rows x 62 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Read the csv file using 'read_csv'. Please write your dataset location here.\n",
    "\n",
    "movies = pd.read_csv('/Users/prathiknsunku/Desktop/Movie+Assignment+Data (1).csv')\n",
    "movies.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- ###  Subtask 1.2: Inspect the Dataframe\n",
    "\n",
    "Inspect the dataframe for dimensions, null-values, and summary of different numeric columns."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(100, 62)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check the number of rows and columns in the dataframe\n",
    "\n",
    "movies.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 100 entries, 0 to 99\n",
      "Data columns (total 62 columns):\n",
      " #   Column                  Non-Null Count  Dtype  \n",
      "---  ------                  --------------  -----  \n",
      " 0   Title                   100 non-null    object \n",
      " 1   title_year              100 non-null    int64  \n",
      " 2   budget                  100 non-null    int64  \n",
      " 3   Gross                   100 non-null    int64  \n",
      " 4   actor_1_name            100 non-null    object \n",
      " 5   actor_2_name            100 non-null    object \n",
      " 6   actor_3_name            100 non-null    object \n",
      " 7   actor_1_facebook_likes  100 non-null    int64  \n",
      " 8   actor_2_facebook_likes  99 non-null     float64\n",
      " 9   actor_3_facebook_likes  98 non-null     float64\n",
      " 10  IMDb_rating             100 non-null    float64\n",
      " 11  genre_1                 100 non-null    object \n",
      " 12  genre_2                 97 non-null     object \n",
      " 13  genre_3                 74 non-null     object \n",
      " 14  MetaCritic              95 non-null     float64\n",
      " 15  Runtime                 100 non-null    int64  \n",
      " 16  CVotes10                100 non-null    int64  \n",
      " 17  CVotes09                100 non-null    int64  \n",
      " 18  CVotes08                100 non-null    int64  \n",
      " 19  CVotes07                100 non-null    int64  \n",
      " 20  CVotes06                100 non-null    int64  \n",
      " 21  CVotes05                100 non-null    int64  \n",
      " 22  CVotes04                100 non-null    int64  \n",
      " 23  CVotes03                100 non-null    int64  \n",
      " 24  CVotes02                100 non-null    int64  \n",
      " 25  CVotes01                100 non-null    int64  \n",
      " 26  CVotesMale              100 non-null    int64  \n",
      " 27  CVotesFemale            100 non-null    int64  \n",
      " 28  CVotesU18               100 non-null    int64  \n",
      " 29  CVotesU18M              100 non-null    int64  \n",
      " 30  CVotesU18F              100 non-null    int64  \n",
      " 31  CVotes1829              100 non-null    int64  \n",
      " 32  CVotes1829M             100 non-null    int64  \n",
      " 33  CVotes1829F             100 non-null    int64  \n",
      " 34  CVotes3044              100 non-null    int64  \n",
      " 35  CVotes3044M             100 non-null    int64  \n",
      " 36  CVotes3044F             100 non-null    int64  \n",
      " 37  CVotes45A               100 non-null    int64  \n",
      " 38  CVotes45AM              100 non-null    int64  \n",
      " 39  CVotes45AF              100 non-null    int64  \n",
      " 40  CVotes1000              100 non-null    int64  \n",
      " 41  CVotesUS                100 non-null    int64  \n",
      " 42  CVotesnUS               100 non-null    int64  \n",
      " 43  VotesM                  100 non-null    float64\n",
      " 44  VotesF                  100 non-null    float64\n",
      " 45  VotesU18                100 non-null    float64\n",
      " 46  VotesU18M               100 non-null    float64\n",
      " 47  VotesU18F               100 non-null    float64\n",
      " 48  Votes1829               100 non-null    float64\n",
      " 49  Votes1829M              100 non-null    float64\n",
      " 50  Votes1829F              100 non-null    float64\n",
      " 51  Votes3044               100 non-null    float64\n",
      " 52  Votes3044M              100 non-null    float64\n",
      " 53  Votes3044F              100 non-null    float64\n",
      " 54  Votes45A                100 non-null    float64\n",
      " 55  Votes45AM               100 non-null    float64\n",
      " 56  Votes45AF               100 non-null    float64\n",
      " 57  Votes1000               100 non-null    float64\n",
      " 58  VotesUS                 100 non-null    float64\n",
      " 59  VotesnUS                100 non-null    float64\n",
      " 60  content_rating          100 non-null    object \n",
      " 61  Country                 100 non-null    object \n",
      "dtypes: float64(21), int64(32), object(9)\n",
      "memory usage: 48.6+ KB\n"
     ]
    }
   ],
   "source": [
    "# Check the column-wise info of the dataframe\n",
    "\n",
    "movies.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>title_year</th>\n",
       "      <th>budget</th>\n",
       "      <th>Gross</th>\n",
       "      <th>actor_1_name</th>\n",
       "      <th>actor_2_name</th>\n",
       "      <th>actor_3_name</th>\n",
       "      <th>actor_1_facebook_likes</th>\n",
       "      <th>actor_2_facebook_likes</th>\n",
       "      <th>actor_3_facebook_likes</th>\n",
       "      <th>...</th>\n",
       "      <th>Votes3044M</th>\n",
       "      <th>Votes3044F</th>\n",
       "      <th>Votes45A</th>\n",
       "      <th>Votes45AM</th>\n",
       "      <th>Votes45AF</th>\n",
       "      <th>Votes1000</th>\n",
       "      <th>VotesUS</th>\n",
       "      <th>VotesnUS</th>\n",
       "      <th>content_rating</th>\n",
       "      <th>Country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>100</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>1.000000e+02</td>\n",
       "      <td>1.000000e+02</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>98.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.00000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>100</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>75</td>\n",
       "      <td>94</td>\n",
       "      <td>96</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>Scott Pilgrim vs. the World</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Leonardo DiCaprio</td>\n",
       "      <td>Scoot McNairy</td>\n",
       "      <td>James Nesbitt</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>45</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2012.820000</td>\n",
       "      <td>7.838400e+07</td>\n",
       "      <td>1.468679e+08</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13407.270000</td>\n",
       "      <td>7377.303030</td>\n",
       "      <td>3002.153061</td>\n",
       "      <td>...</td>\n",
       "      <td>7.723000</td>\n",
       "      <td>7.780000</td>\n",
       "      <td>7.65100</td>\n",
       "      <td>7.624000</td>\n",
       "      <td>7.770000</td>\n",
       "      <td>7.274000</td>\n",
       "      <td>7.958000</td>\n",
       "      <td>7.793000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>NaN</td>\n",
       "      <td>1.919491</td>\n",
       "      <td>7.445295e+07</td>\n",
       "      <td>1.454004e+08</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10649.037862</td>\n",
       "      <td>13471.568216</td>\n",
       "      <td>6940.301133</td>\n",
       "      <td>...</td>\n",
       "      <td>0.260479</td>\n",
       "      <td>0.282128</td>\n",
       "      <td>0.21485</td>\n",
       "      <td>0.213258</td>\n",
       "      <td>0.301344</td>\n",
       "      <td>0.361987</td>\n",
       "      <td>0.232327</td>\n",
       "      <td>0.264099</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2010.000000</td>\n",
       "      <td>3.000000e+06</td>\n",
       "      <td>2.238380e+05</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>7.200000</td>\n",
       "      <td>7.200000</td>\n",
       "      <td>7.10000</td>\n",
       "      <td>7.100000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>6.400000</td>\n",
       "      <td>7.500000</td>\n",
       "      <td>7.300000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2011.000000</td>\n",
       "      <td>1.575000e+07</td>\n",
       "      <td>4.199752e+07</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>580.000000</td>\n",
       "      <td>319.750000</td>\n",
       "      <td>...</td>\n",
       "      <td>7.500000</td>\n",
       "      <td>7.600000</td>\n",
       "      <td>7.50000</td>\n",
       "      <td>7.475000</td>\n",
       "      <td>7.500000</td>\n",
       "      <td>7.100000</td>\n",
       "      <td>7.800000</td>\n",
       "      <td>7.600000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2013.000000</td>\n",
       "      <td>4.225000e+07</td>\n",
       "      <td>1.070266e+08</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>626.500000</td>\n",
       "      <td>...</td>\n",
       "      <td>7.700000</td>\n",
       "      <td>7.800000</td>\n",
       "      <td>7.65000</td>\n",
       "      <td>7.600000</td>\n",
       "      <td>7.800000</td>\n",
       "      <td>7.300000</td>\n",
       "      <td>7.950000</td>\n",
       "      <td>7.750000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2014.000000</td>\n",
       "      <td>1.500000e+08</td>\n",
       "      <td>2.107548e+08</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20000.000000</td>\n",
       "      <td>11000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>7.900000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>7.80000</td>\n",
       "      <td>7.800000</td>\n",
       "      <td>7.925000</td>\n",
       "      <td>7.500000</td>\n",
       "      <td>8.100000</td>\n",
       "      <td>7.925000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2016.000000</td>\n",
       "      <td>2.600000e+08</td>\n",
       "      <td>9.366622e+08</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>35000.000000</td>\n",
       "      <td>96000.000000</td>\n",
       "      <td>46000.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>8.700000</td>\n",
       "      <td>8.500000</td>\n",
       "      <td>8.10000</td>\n",
       "      <td>8.100000</td>\n",
       "      <td>8.500000</td>\n",
       "      <td>8.200000</td>\n",
       "      <td>8.700000</td>\n",
       "      <td>8.800000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11 rows × 62 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                              Title   title_year        budget         Gross  \\\n",
       "count                           100   100.000000  1.000000e+02  1.000000e+02   \n",
       "unique                          100          NaN           NaN           NaN   \n",
       "top     Scott Pilgrim vs. the World          NaN           NaN           NaN   \n",
       "freq                              1          NaN           NaN           NaN   \n",
       "mean                            NaN  2012.820000  7.838400e+07  1.468679e+08   \n",
       "std                             NaN     1.919491  7.445295e+07  1.454004e+08   \n",
       "min                             NaN  2010.000000  3.000000e+06  2.238380e+05   \n",
       "25%                             NaN  2011.000000  1.575000e+07  4.199752e+07   \n",
       "50%                             NaN  2013.000000  4.225000e+07  1.070266e+08   \n",
       "75%                             NaN  2014.000000  1.500000e+08  2.107548e+08   \n",
       "max                             NaN  2016.000000  2.600000e+08  9.366622e+08   \n",
       "\n",
       "             actor_1_name   actor_2_name   actor_3_name  \\\n",
       "count                 100            100            100   \n",
       "unique                 75             94             96   \n",
       "top     Leonardo DiCaprio  Scoot McNairy  James Nesbitt   \n",
       "freq                    5              2              2   \n",
       "mean                  NaN            NaN            NaN   \n",
       "std                   NaN            NaN            NaN   \n",
       "min                   NaN            NaN            NaN   \n",
       "25%                   NaN            NaN            NaN   \n",
       "50%                   NaN            NaN            NaN   \n",
       "75%                   NaN            NaN            NaN   \n",
       "max                   NaN            NaN            NaN   \n",
       "\n",
       "        actor_1_facebook_likes  actor_2_facebook_likes  \\\n",
       "count               100.000000               99.000000   \n",
       "unique                     NaN                     NaN   \n",
       "top                        NaN                     NaN   \n",
       "freq                       NaN                     NaN   \n",
       "mean              13407.270000             7377.303030   \n",
       "std               10649.037862            13471.568216   \n",
       "min                  39.000000               12.000000   \n",
       "25%                1000.000000              580.000000   \n",
       "50%               13000.000000             1000.000000   \n",
       "75%               20000.000000            11000.000000   \n",
       "max               35000.000000            96000.000000   \n",
       "\n",
       "        actor_3_facebook_likes  ...  Votes3044M  Votes3044F   Votes45A  \\\n",
       "count                98.000000  ...  100.000000  100.000000  100.00000   \n",
       "unique                     NaN  ...         NaN         NaN        NaN   \n",
       "top                        NaN  ...         NaN         NaN        NaN   \n",
       "freq                       NaN  ...         NaN         NaN        NaN   \n",
       "mean               3002.153061  ...    7.723000    7.780000    7.65100   \n",
       "std                6940.301133  ...    0.260479    0.282128    0.21485   \n",
       "min                   0.000000  ...    7.200000    7.200000    7.10000   \n",
       "25%                 319.750000  ...    7.500000    7.600000    7.50000   \n",
       "50%                 626.500000  ...    7.700000    7.800000    7.65000   \n",
       "75%                1000.000000  ...    7.900000    8.000000    7.80000   \n",
       "max               46000.000000  ...    8.700000    8.500000    8.10000   \n",
       "\n",
       "         Votes45AM   Votes45AF   Votes1000     VotesUS    VotesnUS  \\\n",
       "count   100.000000  100.000000  100.000000  100.000000  100.000000   \n",
       "unique         NaN         NaN         NaN         NaN         NaN   \n",
       "top            NaN         NaN         NaN         NaN         NaN   \n",
       "freq           NaN         NaN         NaN         NaN         NaN   \n",
       "mean      7.624000    7.770000    7.274000    7.958000    7.793000   \n",
       "std       0.213258    0.301344    0.361987    0.232327    0.264099   \n",
       "min       7.100000    7.000000    6.400000    7.500000    7.300000   \n",
       "25%       7.475000    7.500000    7.100000    7.800000    7.600000   \n",
       "50%       7.600000    7.800000    7.300000    7.950000    7.750000   \n",
       "75%       7.800000    7.925000    7.500000    8.100000    7.925000   \n",
       "max       8.100000    8.500000    8.200000    8.700000    8.800000   \n",
       "\n",
       "        content_rating  Country  \n",
       "count              100      100  \n",
       "unique               4        6  \n",
       "top              PG-13      USA  \n",
       "freq                45       81  \n",
       "mean               NaN      NaN  \n",
       "std                NaN      NaN  \n",
       "min                NaN      NaN  \n",
       "25%                NaN      NaN  \n",
       "50%                NaN      NaN  \n",
       "75%                NaN      NaN  \n",
       "max                NaN      NaN  \n",
       "\n",
       "[11 rows x 62 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check the summary for the numeric columns \n",
    "movies.describe(include =\"all\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Task 2: Data Analysis\n",
    "\n",
    "Now that we have loaded the dataset and inspected it, we see that most of the data is in place. As of now, no data cleaning is required, so let's start with some data manipulation, analysis, and visualisation to get various insights about the data. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-  ###  Subtask 2.1: Reduce those Digits!\n",
    "\n",
    "These numbers in the `budget` and `gross` are too big, compromising its readability. Let's convert the unit of the `budget` and `gross` columns from `$` to `million $` first."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>title_year</th>\n",
       "      <th>budget</th>\n",
       "      <th>Gross</th>\n",
       "      <th>actor_1_name</th>\n",
       "      <th>actor_2_name</th>\n",
       "      <th>actor_3_name</th>\n",
       "      <th>actor_1_facebook_likes</th>\n",
       "      <th>actor_2_facebook_likes</th>\n",
       "      <th>actor_3_facebook_likes</th>\n",
       "      <th>...</th>\n",
       "      <th>Votes3044M</th>\n",
       "      <th>Votes3044F</th>\n",
       "      <th>Votes45A</th>\n",
       "      <th>Votes45AM</th>\n",
       "      <th>Votes45AF</th>\n",
       "      <th>Votes1000</th>\n",
       "      <th>VotesUS</th>\n",
       "      <th>VotesnUS</th>\n",
       "      <th>content_rating</th>\n",
       "      <th>Country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>La La Land</td>\n",
       "      <td>2016</td>\n",
       "      <td>30</td>\n",
       "      <td>151</td>\n",
       "      <td>Ryan Gosling</td>\n",
       "      <td>Emma Stone</td>\n",
       "      <td>Amiée Conn</td>\n",
       "      <td>14000</td>\n",
       "      <td>19000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.1</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Zootopia</td>\n",
       "      <td>2016</td>\n",
       "      <td>150</td>\n",
       "      <td>341</td>\n",
       "      <td>Ginnifer Goodwin</td>\n",
       "      <td>Jason Bateman</td>\n",
       "      <td>Idris Elba</td>\n",
       "      <td>2800</td>\n",
       "      <td>28000.0</td>\n",
       "      <td>27000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.6</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>PG</td>\n",
       "      <td>USA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Lion</td>\n",
       "      <td>2016</td>\n",
       "      <td>12</td>\n",
       "      <td>51</td>\n",
       "      <td>Dev Patel</td>\n",
       "      <td>Nicole Kidman</td>\n",
       "      <td>Rooney Mara</td>\n",
       "      <td>33000</td>\n",
       "      <td>96000.0</td>\n",
       "      <td>9800.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.9</td>\n",
       "      <td>8.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.9</td>\n",
       "      <td>8.4</td>\n",
       "      <td>7.1</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.0</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>Australia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Arrival</td>\n",
       "      <td>2016</td>\n",
       "      <td>47</td>\n",
       "      <td>100</td>\n",
       "      <td>Amy Adams</td>\n",
       "      <td>Jeremy Renner</td>\n",
       "      <td>Forest Whitaker</td>\n",
       "      <td>35000</td>\n",
       "      <td>5300.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.3</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.9</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Manchester by the Sea</td>\n",
       "      <td>2016</td>\n",
       "      <td>9</td>\n",
       "      <td>47</td>\n",
       "      <td>Casey Affleck</td>\n",
       "      <td>Michelle Williams</td>\n",
       "      <td>Kyle Chandler</td>\n",
       "      <td>518</td>\n",
       "      <td>71000.0</td>\n",
       "      <td>3300.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>Whiplash</td>\n",
       "      <td>2014</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>J.K. Simmons</td>\n",
       "      <td>Melissa Benoist</td>\n",
       "      <td>Chris Mulkey</td>\n",
       "      <td>24000</td>\n",
       "      <td>970.0</td>\n",
       "      <td>535.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.2</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.6</td>\n",
       "      <td>8.4</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>Before Midnight</td>\n",
       "      <td>2013</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>Seamus Davey-Fitzpatrick</td>\n",
       "      <td>Ariane Labed</td>\n",
       "      <td>Athina Rachel Tsangari</td>\n",
       "      <td>140</td>\n",
       "      <td>63.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.3</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.2</td>\n",
       "      <td>7.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.9</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>Star Wars: Episode VII - The Force Awakens</td>\n",
       "      <td>2015</td>\n",
       "      <td>245</td>\n",
       "      <td>936</td>\n",
       "      <td>Doug Walker</td>\n",
       "      <td>Rob Walker</td>\n",
       "      <td>0</td>\n",
       "      <td>131</td>\n",
       "      <td>12.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.9</td>\n",
       "      <td>8.2</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.2</td>\n",
       "      <td>7.7</td>\n",
       "      <td>8.2</td>\n",
       "      <td>7.9</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part I</td>\n",
       "      <td>2010</td>\n",
       "      <td>150</td>\n",
       "      <td>296</td>\n",
       "      <td>Rupert Grint</td>\n",
       "      <td>Toby Jones</td>\n",
       "      <td>Alfred Enoch</td>\n",
       "      <td>10000</td>\n",
       "      <td>2000.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.3</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.3</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.5</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>UK</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>Tucker and Dale vs Evil</td>\n",
       "      <td>2010</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>Katrina Bowden</td>\n",
       "      <td>Tyler Labine</td>\n",
       "      <td>Chelan Simmons</td>\n",
       "      <td>948</td>\n",
       "      <td>779.0</td>\n",
       "      <td>440.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.5</td>\n",
       "      <td>R</td>\n",
       "      <td>Canada</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 62 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                           Title  title_year  budget  Gross  \\\n",
       "0                                     La La Land        2016      30    151   \n",
       "1                                       Zootopia        2016     150    341   \n",
       "2                                           Lion        2016      12     51   \n",
       "3                                        Arrival        2016      47    100   \n",
       "4                          Manchester by the Sea        2016       9     47   \n",
       "..                                           ...         ...     ...    ...   \n",
       "95                                      Whiplash        2014       3     13   \n",
       "96                               Before Midnight        2013       3      8   \n",
       "97    Star Wars: Episode VII - The Force Awakens        2015     245    936   \n",
       "98  Harry Potter and the Deathly Hallows: Part I        2010     150    296   \n",
       "99                       Tucker and Dale vs Evil        2010       5      0   \n",
       "\n",
       "                actor_1_name        actor_2_name            actor_3_name  \\\n",
       "0               Ryan Gosling          Emma Stone              Amiée Conn   \n",
       "1           Ginnifer Goodwin       Jason Bateman              Idris Elba   \n",
       "2                  Dev Patel       Nicole Kidman             Rooney Mara   \n",
       "3                  Amy Adams       Jeremy Renner         Forest Whitaker   \n",
       "4              Casey Affleck  Michelle Williams            Kyle Chandler   \n",
       "..                       ...                 ...                     ...   \n",
       "95              J.K. Simmons     Melissa Benoist            Chris Mulkey   \n",
       "96  Seamus Davey-Fitzpatrick        Ariane Labed  Athina Rachel Tsangari   \n",
       "97               Doug Walker          Rob Walker                       0   \n",
       "98              Rupert Grint          Toby Jones            Alfred Enoch   \n",
       "99            Katrina Bowden        Tyler Labine          Chelan Simmons   \n",
       "\n",
       "    actor_1_facebook_likes  actor_2_facebook_likes  actor_3_facebook_likes  \\\n",
       "0                    14000                 19000.0                     NaN   \n",
       "1                     2800                 28000.0                 27000.0   \n",
       "2                    33000                 96000.0                  9800.0   \n",
       "3                    35000                  5300.0                     NaN   \n",
       "4                      518                 71000.0                  3300.0   \n",
       "..                     ...                     ...                     ...   \n",
       "95                   24000                   970.0                   535.0   \n",
       "96                     140                    63.0                    48.0   \n",
       "97                     131                    12.0                     0.0   \n",
       "98                   10000                  2000.0                  1000.0   \n",
       "99                     948                   779.0                   440.0   \n",
       "\n",
       "    ...  Votes3044M Votes3044F Votes45A Votes45AM  Votes45AF  Votes1000  \\\n",
       "0   ...         7.9        7.8      7.6       7.6        7.5        7.1   \n",
       "1   ...         7.8        8.1      7.8       7.8        8.1        7.6   \n",
       "2   ...         7.9        8.2      8.0       7.9        8.4        7.1   \n",
       "3   ...         7.8        7.8      7.6       7.6        7.7        7.3   \n",
       "4   ...         7.7        7.7      7.6       7.6        7.6        7.1   \n",
       "..  ...         ...        ...      ...       ...        ...        ...   \n",
       "95  ...         8.3        8.2      8.1       8.1        8.2        8.0   \n",
       "96  ...         7.8        7.6      7.3       7.4        7.2        7.0   \n",
       "97  ...         7.9        8.2      7.9       7.8        8.2        7.7   \n",
       "98  ...         7.3        8.1      7.4       7.3        8.0        6.7   \n",
       "99  ...         7.5        7.7      7.5       7.4        7.7        7.1   \n",
       "\n",
       "    VotesUS  VotesnUS  content_rating    Country  \n",
       "0       8.3       8.1           PG-13        USA  \n",
       "1       8.0       8.0              PG        USA  \n",
       "2       8.1       8.0           PG-13  Australia  \n",
       "3       8.0       7.9           PG-13        USA  \n",
       "4       7.9       7.8               R        USA  \n",
       "..      ...       ...             ...        ...  \n",
       "95      8.6       8.4               R        USA  \n",
       "96      8.0       7.9               R        USA  \n",
       "97      8.2       7.9           PG-13        USA  \n",
       "98      7.9       7.5           PG-13         UK  \n",
       "99      7.7       7.5               R     Canada  \n",
       "\n",
       "[100 rows x 62 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Divide the 'gross' and 'budget' columns by 1000000 to convert '$' to 'million $'\n",
    "\n",
    "movies['Gross']=movies['Gross'].floordiv(1000000)\n",
    "movies['budget']=movies['budget'].floordiv(1000000)\n",
    "movies\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-  ###  Subtask 2.2: Let's Talk Profit!\n",
    "\n",
    "    1. Create a new column called `profit` which contains the difference of the two columns: `gross` and `budget`.\n",
    "    2. Sort the dataframe using the `profit` column as reference.\n",
    "    3. Extract the top ten profiting movies in descending order and store them in a new dataframe - `top10`.\n",
    "    4. Plot a scatter or a joint plot between the columns `budget` and `profit` and write a few words on what you observed.\n",
    "    5. Extract the movies with a negative profit and store them in a new dataframe - `neg_profit`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>title_year</th>\n",
       "      <th>budget</th>\n",
       "      <th>Gross</th>\n",
       "      <th>actor_1_name</th>\n",
       "      <th>actor_2_name</th>\n",
       "      <th>actor_3_name</th>\n",
       "      <th>actor_1_facebook_likes</th>\n",
       "      <th>actor_2_facebook_likes</th>\n",
       "      <th>actor_3_facebook_likes</th>\n",
       "      <th>...</th>\n",
       "      <th>Votes3044F</th>\n",
       "      <th>Votes45A</th>\n",
       "      <th>Votes45AM</th>\n",
       "      <th>Votes45AF</th>\n",
       "      <th>Votes1000</th>\n",
       "      <th>VotesUS</th>\n",
       "      <th>VotesnUS</th>\n",
       "      <th>content_rating</th>\n",
       "      <th>Country</th>\n",
       "      <th>profit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>La La Land</td>\n",
       "      <td>2016</td>\n",
       "      <td>30</td>\n",
       "      <td>151</td>\n",
       "      <td>Ryan Gosling</td>\n",
       "      <td>Emma Stone</td>\n",
       "      <td>Amiée Conn</td>\n",
       "      <td>14000</td>\n",
       "      <td>19000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.1</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Zootopia</td>\n",
       "      <td>2016</td>\n",
       "      <td>150</td>\n",
       "      <td>341</td>\n",
       "      <td>Ginnifer Goodwin</td>\n",
       "      <td>Jason Bateman</td>\n",
       "      <td>Idris Elba</td>\n",
       "      <td>2800</td>\n",
       "      <td>28000.0</td>\n",
       "      <td>27000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.6</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>PG</td>\n",
       "      <td>USA</td>\n",
       "      <td>191</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Lion</td>\n",
       "      <td>2016</td>\n",
       "      <td>12</td>\n",
       "      <td>51</td>\n",
       "      <td>Dev Patel</td>\n",
       "      <td>Nicole Kidman</td>\n",
       "      <td>Rooney Mara</td>\n",
       "      <td>33000</td>\n",
       "      <td>96000.0</td>\n",
       "      <td>9800.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.9</td>\n",
       "      <td>8.4</td>\n",
       "      <td>7.1</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.0</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>Australia</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Arrival</td>\n",
       "      <td>2016</td>\n",
       "      <td>47</td>\n",
       "      <td>100</td>\n",
       "      <td>Amy Adams</td>\n",
       "      <td>Jeremy Renner</td>\n",
       "      <td>Forest Whitaker</td>\n",
       "      <td>35000</td>\n",
       "      <td>5300.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.3</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.9</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Manchester by the Sea</td>\n",
       "      <td>2016</td>\n",
       "      <td>9</td>\n",
       "      <td>47</td>\n",
       "      <td>Casey Affleck</td>\n",
       "      <td>Michelle Williams</td>\n",
       "      <td>Kyle Chandler</td>\n",
       "      <td>518</td>\n",
       "      <td>71000.0</td>\n",
       "      <td>3300.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>Whiplash</td>\n",
       "      <td>2014</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>J.K. Simmons</td>\n",
       "      <td>Melissa Benoist</td>\n",
       "      <td>Chris Mulkey</td>\n",
       "      <td>24000</td>\n",
       "      <td>970.0</td>\n",
       "      <td>535.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.2</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.6</td>\n",
       "      <td>8.4</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>Before Midnight</td>\n",
       "      <td>2013</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>Seamus Davey-Fitzpatrick</td>\n",
       "      <td>Ariane Labed</td>\n",
       "      <td>Athina Rachel Tsangari</td>\n",
       "      <td>140</td>\n",
       "      <td>63.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.3</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.2</td>\n",
       "      <td>7.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.9</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>Star Wars: Episode VII - The Force Awakens</td>\n",
       "      <td>2015</td>\n",
       "      <td>245</td>\n",
       "      <td>936</td>\n",
       "      <td>Doug Walker</td>\n",
       "      <td>Rob Walker</td>\n",
       "      <td>0</td>\n",
       "      <td>131</td>\n",
       "      <td>12.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.2</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.2</td>\n",
       "      <td>7.7</td>\n",
       "      <td>8.2</td>\n",
       "      <td>7.9</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>Harry Potter and the Deathly Hallows: Part I</td>\n",
       "      <td>2010</td>\n",
       "      <td>150</td>\n",
       "      <td>296</td>\n",
       "      <td>Rupert Grint</td>\n",
       "      <td>Toby Jones</td>\n",
       "      <td>Alfred Enoch</td>\n",
       "      <td>10000</td>\n",
       "      <td>2000.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.3</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.5</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>UK</td>\n",
       "      <td>146</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>Tucker and Dale vs Evil</td>\n",
       "      <td>2010</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>Katrina Bowden</td>\n",
       "      <td>Tyler Labine</td>\n",
       "      <td>Chelan Simmons</td>\n",
       "      <td>948</td>\n",
       "      <td>779.0</td>\n",
       "      <td>440.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.5</td>\n",
       "      <td>R</td>\n",
       "      <td>Canada</td>\n",
       "      <td>-5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 63 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                           Title  title_year  budget  Gross  \\\n",
       "0                                     La La Land        2016      30    151   \n",
       "1                                       Zootopia        2016     150    341   \n",
       "2                                           Lion        2016      12     51   \n",
       "3                                        Arrival        2016      47    100   \n",
       "4                          Manchester by the Sea        2016       9     47   \n",
       "..                                           ...         ...     ...    ...   \n",
       "95                                      Whiplash        2014       3     13   \n",
       "96                               Before Midnight        2013       3      8   \n",
       "97    Star Wars: Episode VII - The Force Awakens        2015     245    936   \n",
       "98  Harry Potter and the Deathly Hallows: Part I        2010     150    296   \n",
       "99                       Tucker and Dale vs Evil        2010       5      0   \n",
       "\n",
       "                actor_1_name        actor_2_name            actor_3_name  \\\n",
       "0               Ryan Gosling          Emma Stone              Amiée Conn   \n",
       "1           Ginnifer Goodwin       Jason Bateman              Idris Elba   \n",
       "2                  Dev Patel       Nicole Kidman             Rooney Mara   \n",
       "3                  Amy Adams       Jeremy Renner         Forest Whitaker   \n",
       "4              Casey Affleck  Michelle Williams            Kyle Chandler   \n",
       "..                       ...                 ...                     ...   \n",
       "95              J.K. Simmons     Melissa Benoist            Chris Mulkey   \n",
       "96  Seamus Davey-Fitzpatrick        Ariane Labed  Athina Rachel Tsangari   \n",
       "97               Doug Walker          Rob Walker                       0   \n",
       "98              Rupert Grint          Toby Jones            Alfred Enoch   \n",
       "99            Katrina Bowden        Tyler Labine          Chelan Simmons   \n",
       "\n",
       "    actor_1_facebook_likes  actor_2_facebook_likes  actor_3_facebook_likes  \\\n",
       "0                    14000                 19000.0                     NaN   \n",
       "1                     2800                 28000.0                 27000.0   \n",
       "2                    33000                 96000.0                  9800.0   \n",
       "3                    35000                  5300.0                     NaN   \n",
       "4                      518                 71000.0                  3300.0   \n",
       "..                     ...                     ...                     ...   \n",
       "95                   24000                   970.0                   535.0   \n",
       "96                     140                    63.0                    48.0   \n",
       "97                     131                    12.0                     0.0   \n",
       "98                   10000                  2000.0                  1000.0   \n",
       "99                     948                   779.0                   440.0   \n",
       "\n",
       "    ...  Votes3044F Votes45A Votes45AM Votes45AF  Votes1000  VotesUS  \\\n",
       "0   ...         7.8      7.6       7.6       7.5        7.1      8.3   \n",
       "1   ...         8.1      7.8       7.8       8.1        7.6      8.0   \n",
       "2   ...         8.2      8.0       7.9       8.4        7.1      8.1   \n",
       "3   ...         7.8      7.6       7.6       7.7        7.3      8.0   \n",
       "4   ...         7.7      7.6       7.6       7.6        7.1      7.9   \n",
       "..  ...         ...      ...       ...       ...        ...      ...   \n",
       "95  ...         8.2      8.1       8.1       8.2        8.0      8.6   \n",
       "96  ...         7.6      7.3       7.4       7.2        7.0      8.0   \n",
       "97  ...         8.2      7.9       7.8       8.2        7.7      8.2   \n",
       "98  ...         8.1      7.4       7.3       8.0        6.7      7.9   \n",
       "99  ...         7.7      7.5       7.4       7.7        7.1      7.7   \n",
       "\n",
       "    VotesnUS  content_rating    Country  profit  \n",
       "0        8.1           PG-13        USA     121  \n",
       "1        8.0              PG        USA     191  \n",
       "2        8.0           PG-13  Australia      39  \n",
       "3        7.9           PG-13        USA      53  \n",
       "4        7.8               R        USA      38  \n",
       "..       ...             ...        ...     ...  \n",
       "95       8.4               R        USA      10  \n",
       "96       7.9               R        USA       5  \n",
       "97       7.9           PG-13        USA     691  \n",
       "98       7.5           PG-13         UK     146  \n",
       "99       7.5               R     Canada      -5  \n",
       "\n",
       "[100 rows x 63 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create the new column named 'profit' by subtracting the 'budget' column from the 'gross' column\n",
    "movies['profit'] = movies['Gross']- movies['budget']\n",
    "movies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>title_year</th>\n",
       "      <th>budget</th>\n",
       "      <th>Gross</th>\n",
       "      <th>actor_1_name</th>\n",
       "      <th>actor_2_name</th>\n",
       "      <th>actor_3_name</th>\n",
       "      <th>actor_1_facebook_likes</th>\n",
       "      <th>actor_2_facebook_likes</th>\n",
       "      <th>actor_3_facebook_likes</th>\n",
       "      <th>...</th>\n",
       "      <th>Votes3044F</th>\n",
       "      <th>Votes45A</th>\n",
       "      <th>Votes45AM</th>\n",
       "      <th>Votes45AF</th>\n",
       "      <th>Votes1000</th>\n",
       "      <th>VotesUS</th>\n",
       "      <th>VotesnUS</th>\n",
       "      <th>content_rating</th>\n",
       "      <th>Country</th>\n",
       "      <th>profit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Star Wars: Episode VII - The Force Awakens</td>\n",
       "      <td>2015</td>\n",
       "      <td>245</td>\n",
       "      <td>936</td>\n",
       "      <td>Doug Walker</td>\n",
       "      <td>Rob Walker</td>\n",
       "      <td>0</td>\n",
       "      <td>131</td>\n",
       "      <td>12.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.2</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.2</td>\n",
       "      <td>7.7</td>\n",
       "      <td>8.2</td>\n",
       "      <td>7.9</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>The Avengers</td>\n",
       "      <td>2012</td>\n",
       "      <td>220</td>\n",
       "      <td>623</td>\n",
       "      <td>Chris Hemsworth</td>\n",
       "      <td>Robert Downey Jr.</td>\n",
       "      <td>Scarlett Johansson</td>\n",
       "      <td>26000</td>\n",
       "      <td>21000.0</td>\n",
       "      <td>19000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.9</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.4</td>\n",
       "      <td>8.3</td>\n",
       "      <td>7.9</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>403</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Deadpool</td>\n",
       "      <td>2016</td>\n",
       "      <td>58</td>\n",
       "      <td>363</td>\n",
       "      <td>Ryan Reynolds</td>\n",
       "      <td>Ed Skrein</td>\n",
       "      <td>Stefan Kapicic</td>\n",
       "      <td>16000</td>\n",
       "      <td>805.0</td>\n",
       "      <td>361.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.3</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.9</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>305</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>The Hunger Games: Catching Fire</td>\n",
       "      <td>2013</td>\n",
       "      <td>130</td>\n",
       "      <td>424</td>\n",
       "      <td>Jennifer Lawrence</td>\n",
       "      <td>Josh Hutcherson</td>\n",
       "      <td>Sandra Ellis Lafferty</td>\n",
       "      <td>34000</td>\n",
       "      <td>14000.0</td>\n",
       "      <td>523.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.3</td>\n",
       "      <td>7.2</td>\n",
       "      <td>7.9</td>\n",
       "      <td>6.7</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.4</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Toy Story 3</td>\n",
       "      <td>2010</td>\n",
       "      <td>200</td>\n",
       "      <td>414</td>\n",
       "      <td>Tom Hanks</td>\n",
       "      <td>John Ratzenberger</td>\n",
       "      <td>Don Rickles</td>\n",
       "      <td>15000</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>721.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.5</td>\n",
       "      <td>8.3</td>\n",
       "      <td>G</td>\n",
       "      <td>USA</td>\n",
       "      <td>214</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>Scott Pilgrim vs. the World</td>\n",
       "      <td>2010</td>\n",
       "      <td>60</td>\n",
       "      <td>31</td>\n",
       "      <td>Anna Kendrick</td>\n",
       "      <td>Kieran Culkin</td>\n",
       "      <td>Ellen Wong</td>\n",
       "      <td>10000</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>719.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.2</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.0</td>\n",
       "      <td>6.6</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.4</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>-29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>Tangled</td>\n",
       "      <td>2010</td>\n",
       "      <td>260</td>\n",
       "      <td>200</td>\n",
       "      <td>Brad Garrett</td>\n",
       "      <td>Donna Murphy</td>\n",
       "      <td>M.C. Gainey</td>\n",
       "      <td>799</td>\n",
       "      <td>553.0</td>\n",
       "      <td>284.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.9</td>\n",
       "      <td>6.9</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.7</td>\n",
       "      <td>PG</td>\n",
       "      <td>USA</td>\n",
       "      <td>-60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>Edge of Tomorrow</td>\n",
       "      <td>2014</td>\n",
       "      <td>178</td>\n",
       "      <td>100</td>\n",
       "      <td>Tom Cruise</td>\n",
       "      <td>Lara Pulver</td>\n",
       "      <td>Noah Taylor</td>\n",
       "      <td>10000</td>\n",
       "      <td>854.0</td>\n",
       "      <td>509.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.5</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.8</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>-78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>The Little Prince</td>\n",
       "      <td>2015</td>\n",
       "      <td>81</td>\n",
       "      <td>1</td>\n",
       "      <td>Jeff Bridges</td>\n",
       "      <td>James Franco</td>\n",
       "      <td>Mackenzie Foy</td>\n",
       "      <td>12000</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>6000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.9</td>\n",
       "      <td>6.6</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.7</td>\n",
       "      <td>PG</td>\n",
       "      <td>France</td>\n",
       "      <td>-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>Hugo</td>\n",
       "      <td>2011</td>\n",
       "      <td>170</td>\n",
       "      <td>73</td>\n",
       "      <td>ChloÃ« Grace Moretz</td>\n",
       "      <td>Christopher Lee</td>\n",
       "      <td>Ray Winstone</td>\n",
       "      <td>17000</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.5</td>\n",
       "      <td>PG</td>\n",
       "      <td>USA</td>\n",
       "      <td>-97</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 63 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         Title  title_year  budget  Gross  \\\n",
       "0   Star Wars: Episode VII - The Force Awakens        2015     245    936   \n",
       "1                                 The Avengers        2012     220    623   \n",
       "2                                     Deadpool        2016      58    363   \n",
       "3              The Hunger Games: Catching Fire        2013     130    424   \n",
       "4                                  Toy Story 3        2010     200    414   \n",
       "..                                         ...         ...     ...    ...   \n",
       "95                 Scott Pilgrim vs. the World        2010      60     31   \n",
       "96                                     Tangled        2010     260    200   \n",
       "97                            Edge of Tomorrow        2014     178    100   \n",
       "98                           The Little Prince        2015      81      1   \n",
       "99                                        Hugo        2011     170     73   \n",
       "\n",
       "           actor_1_name       actor_2_name           actor_3_name  \\\n",
       "0           Doug Walker         Rob Walker                      0   \n",
       "1       Chris Hemsworth  Robert Downey Jr.     Scarlett Johansson   \n",
       "2         Ryan Reynolds          Ed Skrein         Stefan Kapicic   \n",
       "3     Jennifer Lawrence    Josh Hutcherson  Sandra Ellis Lafferty   \n",
       "4             Tom Hanks  John Ratzenberger            Don Rickles   \n",
       "..                  ...                ...                    ...   \n",
       "95        Anna Kendrick      Kieran Culkin             Ellen Wong   \n",
       "96         Brad Garrett       Donna Murphy            M.C. Gainey   \n",
       "97           Tom Cruise        Lara Pulver            Noah Taylor   \n",
       "98         Jeff Bridges       James Franco          Mackenzie Foy   \n",
       "99  ChloÃ« Grace Moretz    Christopher Lee           Ray Winstone   \n",
       "\n",
       "    actor_1_facebook_likes  actor_2_facebook_likes  actor_3_facebook_likes  \\\n",
       "0                      131                    12.0                     0.0   \n",
       "1                    26000                 21000.0                 19000.0   \n",
       "2                    16000                   805.0                   361.0   \n",
       "3                    34000                 14000.0                   523.0   \n",
       "4                    15000                  1000.0                   721.0   \n",
       "..                     ...                     ...                     ...   \n",
       "95                   10000                  1000.0                   719.0   \n",
       "96                     799                   553.0                   284.0   \n",
       "97                   10000                   854.0                   509.0   \n",
       "98                   12000                 11000.0                  6000.0   \n",
       "99                   17000                 16000.0                  1000.0   \n",
       "\n",
       "    ...  Votes3044F Votes45A Votes45AM Votes45AF  Votes1000  VotesUS  \\\n",
       "0   ...         8.2      7.9       7.8       8.2        7.7      8.2   \n",
       "1   ...         8.1      7.9       7.9       8.1        7.4      8.3   \n",
       "2   ...         7.9      7.8       7.8       7.9        7.3      8.1   \n",
       "3   ...         7.9      7.3       7.2       7.9        6.7      7.7   \n",
       "4   ...         8.3      8.1       8.1       8.1        8.1      8.5   \n",
       "..  ...         ...      ...       ...       ...        ...      ...   \n",
       "95  ...         7.2      7.1       7.1       7.0        6.6      7.8   \n",
       "96  ...         8.0      7.7       7.6       7.9        6.9      7.9   \n",
       "97  ...         7.7      7.8       7.8       7.8        7.5      8.0   \n",
       "98  ...         7.9      7.5       7.4       7.9        6.6      7.7   \n",
       "99  ...         7.4      7.5       7.5       7.6        7.4      7.7   \n",
       "\n",
       "    VotesnUS  content_rating  Country  profit  \n",
       "0        7.9           PG-13      USA     691  \n",
       "1        7.9           PG-13      USA     403  \n",
       "2        7.9               R      USA     305  \n",
       "3        7.4           PG-13      USA     294  \n",
       "4        8.3               G      USA     214  \n",
       "..       ...             ...      ...     ...  \n",
       "95       7.4           PG-13      USA     -29  \n",
       "96       7.7              PG      USA     -60  \n",
       "97       7.8           PG-13      USA     -78  \n",
       "98       7.7              PG   France     -80  \n",
       "99       7.5              PG      USA     -97  \n",
       "\n",
       "[100 rows x 63 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Sort the dataframe with the 'profit' column as reference using the 'sort_values' function. Make sure to set the argument\n",
    "#'ascending' to 'False'\n",
    "movies.sort_values(by = ['profit'],ascending=False,inplace = True,ignore_index=True)\n",
    "movies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    Star Wars: Episode VII - The Force Awakens\n",
       "1                                  The Avengers\n",
       "2                                      Deadpool\n",
       "3               The Hunger Games: Catching Fire\n",
       "4                                   Toy Story 3\n",
       "5                         The Dark Knight Rises\n",
       "6                                The Lego Movie\n",
       "7                                      Zootopia\n",
       "8                                 Despicable Me\n",
       "9                                    Inside Out\n",
       "Name: Title, dtype: object"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get the top 10 profitable movies by using position based indexing. Specify the rows till 10 (0-9)\n",
    "Top_10 = movies.loc[0:9, 'Title']\n",
    "Top_10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plot profit vs budget\n",
    "sns.set(style=\"darkgrid\")\n",
    "plot = sns.jointplot(movies['profit'].astype(float), movies['budget'].astype(float), height=5, ratio=5)\n",
    "plot.ax_marg_x.set_xlim(0, 300)\n",
    "plot.ax_marg_y.set_ylim(-300, 900)\n",
    "plt.suptitle('Profit vs Budget', fontsize=14)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- ### Observations on the Scatter Plot :\n",
    "\n",
    "\n",
    "Most of the movies have a positive profit and the budget is high.\n",
    "Some movies have high budget and less profit.\n",
    "A trend [ positive ] between budget and profit exists. \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The dataset contains the 100 best performing movies from the year 2010 to 2016. However scatter plot tells a different story. You can notice that there are some movies with negative profit. Although good movies do incur losses, but there appear to be quite a few movie with losses. What can be the reason behind this? Lets have a closer look at this by finding the movies with negative profit."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>title_year</th>\n",
       "      <th>budget</th>\n",
       "      <th>Gross</th>\n",
       "      <th>actor_1_name</th>\n",
       "      <th>actor_2_name</th>\n",
       "      <th>actor_3_name</th>\n",
       "      <th>actor_1_facebook_likes</th>\n",
       "      <th>actor_2_facebook_likes</th>\n",
       "      <th>actor_3_facebook_likes</th>\n",
       "      <th>...</th>\n",
       "      <th>Votes3044F</th>\n",
       "      <th>Votes45A</th>\n",
       "      <th>Votes45AM</th>\n",
       "      <th>Votes45AF</th>\n",
       "      <th>Votes1000</th>\n",
       "      <th>VotesUS</th>\n",
       "      <th>VotesnUS</th>\n",
       "      <th>content_rating</th>\n",
       "      <th>Country</th>\n",
       "      <th>profit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>Tucker and Dale vs Evil</td>\n",
       "      <td>2010</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>Katrina Bowden</td>\n",
       "      <td>Tyler Labine</td>\n",
       "      <td>Chelan Simmons</td>\n",
       "      <td>948</td>\n",
       "      <td>779.0</td>\n",
       "      <td>440.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.5</td>\n",
       "      <td>R</td>\n",
       "      <td>Canada</td>\n",
       "      <td>-5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>Amour</td>\n",
       "      <td>2012</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>Isabelle Huppert</td>\n",
       "      <td>Emmanuelle Riva</td>\n",
       "      <td>Jean-Louis Trintignant</td>\n",
       "      <td>678</td>\n",
       "      <td>432.0</td>\n",
       "      <td>319.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.2</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>France</td>\n",
       "      <td>-8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>Rush</td>\n",
       "      <td>2013</td>\n",
       "      <td>38</td>\n",
       "      <td>26</td>\n",
       "      <td>Chris Hemsworth</td>\n",
       "      <td>Olivia Wilde</td>\n",
       "      <td>Alexandra Maria Lara</td>\n",
       "      <td>26000</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>471.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.9</td>\n",
       "      <td>8.1</td>\n",
       "      <td>R</td>\n",
       "      <td>UK</td>\n",
       "      <td>-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>Warrior</td>\n",
       "      <td>2011</td>\n",
       "      <td>25</td>\n",
       "      <td>13</td>\n",
       "      <td>Tom Hardy</td>\n",
       "      <td>Frank Grillo</td>\n",
       "      <td>Kevin Dunn</td>\n",
       "      <td>27000</td>\n",
       "      <td>798.0</td>\n",
       "      <td>581.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>8.2</td>\n",
       "      <td>8.1</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>Flipped</td>\n",
       "      <td>2010</td>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>Madeline Carroll</td>\n",
       "      <td>Rebecca De Mornay</td>\n",
       "      <td>Aidan Quinn</td>\n",
       "      <td>1000</td>\n",
       "      <td>872.0</td>\n",
       "      <td>767.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.3</td>\n",
       "      <td>7.6</td>\n",
       "      <td>6.4</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.7</td>\n",
       "      <td>PG</td>\n",
       "      <td>USA</td>\n",
       "      <td>-13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>X-Men: First Class</td>\n",
       "      <td>2011</td>\n",
       "      <td>160</td>\n",
       "      <td>146</td>\n",
       "      <td>Jennifer Lawrence</td>\n",
       "      <td>Michael Fassbender</td>\n",
       "      <td>Oliver Platt</td>\n",
       "      <td>34000</td>\n",
       "      <td>13000.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.3</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.7</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>-14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>Scott Pilgrim vs. the World</td>\n",
       "      <td>2010</td>\n",
       "      <td>60</td>\n",
       "      <td>31</td>\n",
       "      <td>Anna Kendrick</td>\n",
       "      <td>Kieran Culkin</td>\n",
       "      <td>Ellen Wong</td>\n",
       "      <td>10000</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>719.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.2</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.0</td>\n",
       "      <td>6.6</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.4</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>-29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>Tangled</td>\n",
       "      <td>2010</td>\n",
       "      <td>260</td>\n",
       "      <td>200</td>\n",
       "      <td>Brad Garrett</td>\n",
       "      <td>Donna Murphy</td>\n",
       "      <td>M.C. Gainey</td>\n",
       "      <td>799</td>\n",
       "      <td>553.0</td>\n",
       "      <td>284.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.9</td>\n",
       "      <td>6.9</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.7</td>\n",
       "      <td>PG</td>\n",
       "      <td>USA</td>\n",
       "      <td>-60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>Edge of Tomorrow</td>\n",
       "      <td>2014</td>\n",
       "      <td>178</td>\n",
       "      <td>100</td>\n",
       "      <td>Tom Cruise</td>\n",
       "      <td>Lara Pulver</td>\n",
       "      <td>Noah Taylor</td>\n",
       "      <td>10000</td>\n",
       "      <td>854.0</td>\n",
       "      <td>509.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.5</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.8</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>-78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>The Little Prince</td>\n",
       "      <td>2015</td>\n",
       "      <td>81</td>\n",
       "      <td>1</td>\n",
       "      <td>Jeff Bridges</td>\n",
       "      <td>James Franco</td>\n",
       "      <td>Mackenzie Foy</td>\n",
       "      <td>12000</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>6000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.9</td>\n",
       "      <td>6.6</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.7</td>\n",
       "      <td>PG</td>\n",
       "      <td>France</td>\n",
       "      <td>-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>Hugo</td>\n",
       "      <td>2011</td>\n",
       "      <td>170</td>\n",
       "      <td>73</td>\n",
       "      <td>ChloÃ« Grace Moretz</td>\n",
       "      <td>Christopher Lee</td>\n",
       "      <td>Ray Winstone</td>\n",
       "      <td>17000</td>\n",
       "      <td>16000.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.5</td>\n",
       "      <td>PG</td>\n",
       "      <td>USA</td>\n",
       "      <td>-97</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11 rows × 63 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                          Title  title_year  budget  Gross  \\\n",
       "89      Tucker and Dale vs Evil        2010       5      0   \n",
       "90                        Amour        2012       8      0   \n",
       "91                         Rush        2013      38     26   \n",
       "92                      Warrior        2011      25     13   \n",
       "93                      Flipped        2010      14      1   \n",
       "94           X-Men: First Class        2011     160    146   \n",
       "95  Scott Pilgrim vs. the World        2010      60     31   \n",
       "96                      Tangled        2010     260    200   \n",
       "97             Edge of Tomorrow        2014     178    100   \n",
       "98            The Little Prince        2015      81      1   \n",
       "99                         Hugo        2011     170     73   \n",
       "\n",
       "           actor_1_name        actor_2_name            actor_3_name  \\\n",
       "89       Katrina Bowden        Tyler Labine          Chelan Simmons   \n",
       "90     Isabelle Huppert     Emmanuelle Riva  Jean-Louis Trintignant   \n",
       "91      Chris Hemsworth        Olivia Wilde    Alexandra Maria Lara   \n",
       "92            Tom Hardy        Frank Grillo              Kevin Dunn   \n",
       "93     Madeline Carroll   Rebecca De Mornay             Aidan Quinn   \n",
       "94    Jennifer Lawrence  Michael Fassbender            Oliver Platt   \n",
       "95        Anna Kendrick       Kieran Culkin              Ellen Wong   \n",
       "96         Brad Garrett        Donna Murphy             M.C. Gainey   \n",
       "97           Tom Cruise         Lara Pulver             Noah Taylor   \n",
       "98         Jeff Bridges        James Franco           Mackenzie Foy   \n",
       "99  ChloÃ« Grace Moretz     Christopher Lee            Ray Winstone   \n",
       "\n",
       "    actor_1_facebook_likes  actor_2_facebook_likes  actor_3_facebook_likes  \\\n",
       "89                     948                   779.0                   440.0   \n",
       "90                     678                   432.0                   319.0   \n",
       "91                   26000                 10000.0                   471.0   \n",
       "92                   27000                   798.0                   581.0   \n",
       "93                    1000                   872.0                   767.0   \n",
       "94                   34000                 13000.0                  1000.0   \n",
       "95                   10000                  1000.0                   719.0   \n",
       "96                     799                   553.0                   284.0   \n",
       "97                   10000                   854.0                   509.0   \n",
       "98                   12000                 11000.0                  6000.0   \n",
       "99                   17000                 16000.0                  1000.0   \n",
       "\n",
       "    ...  Votes3044F Votes45A Votes45AM Votes45AF  Votes1000  VotesUS  \\\n",
       "89  ...         7.7      7.5       7.4       7.7        7.1      7.7   \n",
       "90  ...         7.9      7.9       7.8       8.1        7.2      7.9   \n",
       "91  ...         7.9      7.8       7.8       7.8        7.1      7.9   \n",
       "92  ...         8.0      7.7       7.7       7.5        7.1      8.2   \n",
       "93  ...         7.7      7.4       7.3       7.6        6.4      7.5   \n",
       "94  ...         7.8      7.6       7.5       7.7        7.3      7.8   \n",
       "95  ...         7.2      7.1       7.1       7.0        6.6      7.8   \n",
       "96  ...         8.0      7.7       7.6       7.9        6.9      7.9   \n",
       "97  ...         7.7      7.8       7.8       7.8        7.5      8.0   \n",
       "98  ...         7.9      7.5       7.4       7.9        6.6      7.7   \n",
       "99  ...         7.4      7.5       7.5       7.6        7.4      7.7   \n",
       "\n",
       "    VotesnUS  content_rating  Country  profit  \n",
       "89       7.5               R   Canada      -5  \n",
       "90       7.8           PG-13   France      -8  \n",
       "91       8.1               R       UK     -12  \n",
       "92       8.1           PG-13      USA     -12  \n",
       "93       7.7              PG      USA     -13  \n",
       "94       7.7           PG-13      USA     -14  \n",
       "95       7.4           PG-13      USA     -29  \n",
       "96       7.7              PG      USA     -60  \n",
       "97       7.8           PG-13      USA     -78  \n",
       "98       7.7              PG   France     -80  \n",
       "99       7.5              PG      USA     -97  \n",
       "\n",
       "[11 rows x 63 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Find the movies with negative profit\n",
    "neg_profit = movies[(movies['profit']<0)]\n",
    "neg_profit"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**`Checkpoint 1:`** Can you spot the movie `Tangled` in the dataset? You may be aware of the movie 'Tangled'. Although its one of the highest grossing movies of all time, it has negative profit as per this result. If you cross check the gross values of this movie (link: https://www.imdb.com/title/tt0398286/), you can see that the gross in the dataset accounts only for the domestic gross and not the worldwide gross. This is true for may other movies also in the list."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- ### Subtask 2.3: The General Audience and the Critics\n",
    "\n",
    "You might have noticed the column `MetaCritic` in this dataset. This is a very popular website where an average score is determined through the scores given by the top-rated critics. Second, you also have another column `IMDb_rating` which tells you the IMDb rating of a movie. This rating is determined by taking the average of hundred-thousands of ratings from the general audience. \n",
    "\n",
    "As a part of this subtask, you are required to find out the highest rated movies which have been liked by critics and audiences alike.\n",
    "1. Firstly you will notice that the `MetaCritic` score is on a scale of `100` whereas the `IMDb_rating` is on a scale of 10. First convert the `MetaCritic` column to a scale of 10.\n",
    "2. Now, to find out the movies which have been liked by both critics and audiences alike and also have a high rating overall, you need to -\n",
    "    - Create a new column `Avg_rating` which will have the average of the `MetaCritic` and `Rating` columns\n",
    "    - Retain only the movies in which the absolute difference(using abs() function) between the `IMDb_rating` and `Metacritic` columns is less than 0.5. Refer to this link to know how abs() funtion works - https://www.geeksforgeeks.org/abs-in-python/ .\n",
    "    - Sort these values in a descending order of `Avg_rating` and retain only the movies with a rating equal to higher than `8` and store these movies in a new dataframe `UniversalAcclaim`.\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     8.1\n",
       "1     6.9\n",
       "2     6.5\n",
       "3     7.6\n",
       "4     9.2\n",
       "     ... \n",
       "95    6.9\n",
       "96    7.1\n",
       "97    7.1\n",
       "98    7.0\n",
       "99    8.3\n",
       "Name: MetaCritic, Length: 100, dtype: float64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Change the scale of MetaCritic\n",
    "movies['MetaCritic'] = movies['MetaCritic']/10\n",
    "movies['MetaCritic']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     8.10\n",
       "1     7.50\n",
       "2     7.25\n",
       "3     7.60\n",
       "4     8.75\n",
       "      ... \n",
       "95    7.20\n",
       "96    7.45\n",
       "97    7.50\n",
       "98    7.40\n",
       "99    7.90\n",
       "Name: Avg_rating, Length: 100, dtype: float64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Find the average ratings\n",
    "movies['Avg_rating'] = (movies['MetaCritic'] + movies['IMDb_rating'])/2\n",
    "movies['Avg_rating']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>title_year</th>\n",
       "      <th>budget</th>\n",
       "      <th>Gross</th>\n",
       "      <th>actor_1_name</th>\n",
       "      <th>actor_2_name</th>\n",
       "      <th>actor_3_name</th>\n",
       "      <th>actor_1_facebook_likes</th>\n",
       "      <th>actor_2_facebook_likes</th>\n",
       "      <th>actor_3_facebook_likes</th>\n",
       "      <th>...</th>\n",
       "      <th>Votes45A</th>\n",
       "      <th>Votes45AM</th>\n",
       "      <th>Votes45AF</th>\n",
       "      <th>Votes1000</th>\n",
       "      <th>VotesUS</th>\n",
       "      <th>VotesnUS</th>\n",
       "      <th>content_rating</th>\n",
       "      <th>Country</th>\n",
       "      <th>profit</th>\n",
       "      <th>Avg_rating</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>Boyhood</td>\n",
       "      <td>2014</td>\n",
       "      <td>4</td>\n",
       "      <td>25</td>\n",
       "      <td>Ellar Coltrane</td>\n",
       "      <td>Lorelei Linklater</td>\n",
       "      <td>Libby Villari</td>\n",
       "      <td>230</td>\n",
       "      <td>193.0</td>\n",
       "      <td>127.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.9</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>21</td>\n",
       "      <td>8.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>12 Years a Slave</td>\n",
       "      <td>2013</td>\n",
       "      <td>20</td>\n",
       "      <td>56</td>\n",
       "      <td>QuvenzhanÃ© Wallis</td>\n",
       "      <td>Scoot McNairy</td>\n",
       "      <td>Taran Killam</td>\n",
       "      <td>2000</td>\n",
       "      <td>660.0</td>\n",
       "      <td>500.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.7</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.0</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>36</td>\n",
       "      <td>8.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Inside Out</td>\n",
       "      <td>2015</td>\n",
       "      <td>175</td>\n",
       "      <td>356</td>\n",
       "      <td>Amy Poehler</td>\n",
       "      <td>Mindy Kaling</td>\n",
       "      <td>Phyllis Smith</td>\n",
       "      <td>1000</td>\n",
       "      <td>767.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.6</td>\n",
       "      <td>8.2</td>\n",
       "      <td>8.1</td>\n",
       "      <td>PG</td>\n",
       "      <td>USA</td>\n",
       "      <td>181</td>\n",
       "      <td>8.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Toy Story 3</td>\n",
       "      <td>2010</td>\n",
       "      <td>200</td>\n",
       "      <td>414</td>\n",
       "      <td>Tom Hanks</td>\n",
       "      <td>John Ratzenberger</td>\n",
       "      <td>Don Rickles</td>\n",
       "      <td>15000</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>721.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.5</td>\n",
       "      <td>8.3</td>\n",
       "      <td>G</td>\n",
       "      <td>USA</td>\n",
       "      <td>214</td>\n",
       "      <td>8.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>Manchester by the Sea</td>\n",
       "      <td>2016</td>\n",
       "      <td>9</td>\n",
       "      <td>47</td>\n",
       "      <td>Casey Affleck</td>\n",
       "      <td>Michelle Williams</td>\n",
       "      <td>Kyle Chandler</td>\n",
       "      <td>518</td>\n",
       "      <td>71000.0</td>\n",
       "      <td>3300.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>38</td>\n",
       "      <td>8.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>The Hobbit: An Unexpected Journey</td>\n",
       "      <td>2012</td>\n",
       "      <td>180</td>\n",
       "      <td>303</td>\n",
       "      <td>Aidan Turner</td>\n",
       "      <td>Adam Brown</td>\n",
       "      <td>James Nesbitt</td>\n",
       "      <td>5000</td>\n",
       "      <td>972.0</td>\n",
       "      <td>773.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.6</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>123</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Lone Survivor</td>\n",
       "      <td>2013</td>\n",
       "      <td>40</td>\n",
       "      <td>125</td>\n",
       "      <td>Jerry Ferrara</td>\n",
       "      <td>Scott Elrod</td>\n",
       "      <td>Dan Bilzerian</td>\n",
       "      <td>480</td>\n",
       "      <td>449.0</td>\n",
       "      <td>127.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.8</td>\n",
       "      <td>6.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.3</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>85</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>About Time</td>\n",
       "      <td>2013</td>\n",
       "      <td>12</td>\n",
       "      <td>15</td>\n",
       "      <td>Tom Hughes</td>\n",
       "      <td>Tom Hollander</td>\n",
       "      <td>Lindsay Duncan</td>\n",
       "      <td>565</td>\n",
       "      <td>555.0</td>\n",
       "      <td>171.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.8</td>\n",
       "      <td>6.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.7</td>\n",
       "      <td>R</td>\n",
       "      <td>UK</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>The Book Thief</td>\n",
       "      <td>2013</td>\n",
       "      <td>19</td>\n",
       "      <td>21</td>\n",
       "      <td>Emily Watson</td>\n",
       "      <td>Sophie NÃ©lisse</td>\n",
       "      <td>Roger Allam</td>\n",
       "      <td>876</td>\n",
       "      <td>526.0</td>\n",
       "      <td>326.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.5</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.5</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>Flipped</td>\n",
       "      <td>2010</td>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>Madeline Carroll</td>\n",
       "      <td>Rebecca De Mornay</td>\n",
       "      <td>Aidan Quinn</td>\n",
       "      <td>1000</td>\n",
       "      <td>872.0</td>\n",
       "      <td>767.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.3</td>\n",
       "      <td>7.6</td>\n",
       "      <td>6.4</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.7</td>\n",
       "      <td>PG</td>\n",
       "      <td>USA</td>\n",
       "      <td>-13</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 64 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                Title  title_year  budget  Gross  \\\n",
       "69                            Boyhood        2014       4     25   \n",
       "51                   12 Years a Slave        2013      20     56   \n",
       "9                          Inside Out        2015     175    356   \n",
       "4                         Toy Story 3        2010     200    414   \n",
       "49              Manchester by the Sea        2016       9     47   \n",
       "..                                ...         ...     ...    ...   \n",
       "18  The Hobbit: An Unexpected Journey        2012     180    303   \n",
       "30                      Lone Survivor        2013      40    125   \n",
       "85                         About Time        2013      12     15   \n",
       "86                     The Book Thief        2013      19     21   \n",
       "93                            Flipped        2010      14      1   \n",
       "\n",
       "          actor_1_name        actor_2_name    actor_3_name  \\\n",
       "69      Ellar Coltrane   Lorelei Linklater   Libby Villari   \n",
       "51  QuvenzhanÃ© Wallis       Scoot McNairy    Taran Killam   \n",
       "9          Amy Poehler        Mindy Kaling   Phyllis Smith   \n",
       "4            Tom Hanks   John Ratzenberger     Don Rickles   \n",
       "49       Casey Affleck  Michelle Williams    Kyle Chandler   \n",
       "..                 ...                 ...             ...   \n",
       "18        Aidan Turner          Adam Brown   James Nesbitt   \n",
       "30       Jerry Ferrara         Scott Elrod   Dan Bilzerian   \n",
       "85          Tom Hughes       Tom Hollander  Lindsay Duncan   \n",
       "86        Emily Watson     Sophie NÃ©lisse     Roger Allam   \n",
       "93    Madeline Carroll   Rebecca De Mornay     Aidan Quinn   \n",
       "\n",
       "    actor_1_facebook_likes  actor_2_facebook_likes  actor_3_facebook_likes  \\\n",
       "69                     230                   193.0                   127.0   \n",
       "51                    2000                   660.0                   500.0   \n",
       "9                     1000                   767.0                   384.0   \n",
       "4                    15000                  1000.0                   721.0   \n",
       "49                     518                 71000.0                  3300.0   \n",
       "..                     ...                     ...                     ...   \n",
       "18                    5000                   972.0                   773.0   \n",
       "30                     480                   449.0                   127.0   \n",
       "85                     565                   555.0                   171.0   \n",
       "86                     876                   526.0                   326.0   \n",
       "93                    1000                   872.0                   767.0   \n",
       "\n",
       "    ...  Votes45A Votes45AM Votes45AF Votes1000  VotesUS  VotesnUS  \\\n",
       "69  ...       7.7       7.7       7.7       7.2      8.0       7.9   \n",
       "51  ...       7.8       7.8       8.1       7.7      8.3       8.0   \n",
       "9   ...       7.9       7.9       7.9       7.6      8.2       8.1   \n",
       "4   ...       8.1       8.1       8.1       8.1      8.5       8.3   \n",
       "49  ...       7.6       7.6       7.6       7.1      7.9       7.8   \n",
       "..  ...       ...       ...       ...       ...      ...       ...   \n",
       "18  ...       7.7       7.6       8.0       7.5      7.8       7.8   \n",
       "30  ...       7.5       7.4       7.8       6.8      7.8       7.3   \n",
       "85  ...       7.6       7.5       7.8       6.9      7.8       7.7   \n",
       "86  ...       7.6       7.5       8.0       6.6      7.6       7.5   \n",
       "93  ...       7.4       7.3       7.6       6.4      7.5       7.7   \n",
       "\n",
       "    content_rating  Country  profit  Avg_rating  \n",
       "69               R      USA      21        8.95  \n",
       "51               R      USA      36        8.85  \n",
       "9               PG      USA     181        8.80  \n",
       "4                G      USA     214        8.75  \n",
       "49               R      USA      38        8.75  \n",
       "..             ...      ...     ...         ...  \n",
       "18           PG-13      USA     123         NaN  \n",
       "30               R      USA      85         NaN  \n",
       "85               R       UK       3         NaN  \n",
       "86           PG-13      USA       2         NaN  \n",
       "93              PG      USA     -13         NaN  \n",
       "\n",
       "[100 rows x 64 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Sort in descending order of average rating\n",
    "movies = movies.sort_values(by ='Avg_rating',ascending=False)\n",
    "movies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>title_year</th>\n",
       "      <th>budget</th>\n",
       "      <th>Gross</th>\n",
       "      <th>actor_1_name</th>\n",
       "      <th>actor_2_name</th>\n",
       "      <th>actor_3_name</th>\n",
       "      <th>actor_1_facebook_likes</th>\n",
       "      <th>actor_2_facebook_likes</th>\n",
       "      <th>actor_3_facebook_likes</th>\n",
       "      <th>...</th>\n",
       "      <th>Votes45A</th>\n",
       "      <th>Votes45AM</th>\n",
       "      <th>Votes45AF</th>\n",
       "      <th>Votes1000</th>\n",
       "      <th>VotesUS</th>\n",
       "      <th>VotesnUS</th>\n",
       "      <th>content_rating</th>\n",
       "      <th>Country</th>\n",
       "      <th>profit</th>\n",
       "      <th>Avg_rating</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>Whiplash</td>\n",
       "      <td>2014</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>J.K. Simmons</td>\n",
       "      <td>Melissa Benoist</td>\n",
       "      <td>Chris Mulkey</td>\n",
       "      <td>24000</td>\n",
       "      <td>970.0</td>\n",
       "      <td>535.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.6</td>\n",
       "      <td>8.4</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>10</td>\n",
       "      <td>8.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>Django Unchained</td>\n",
       "      <td>2012</td>\n",
       "      <td>100</td>\n",
       "      <td>162</td>\n",
       "      <td>Leonardo DiCaprio</td>\n",
       "      <td>Christoph Waltz</td>\n",
       "      <td>Ato Essandoh</td>\n",
       "      <td>29000</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>265.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.4</td>\n",
       "      <td>8.4</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>62</td>\n",
       "      <td>8.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>Dallas Buyers Club</td>\n",
       "      <td>2013</td>\n",
       "      <td>5</td>\n",
       "      <td>27</td>\n",
       "      <td>Matthew McConaughey</td>\n",
       "      <td>Jennifer Garner</td>\n",
       "      <td>Denis O'Hare</td>\n",
       "      <td>11000</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>896.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.9</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>22</td>\n",
       "      <td>8.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Star Wars: Episode VII - The Force Awakens</td>\n",
       "      <td>2015</td>\n",
       "      <td>245</td>\n",
       "      <td>936</td>\n",
       "      <td>Doug Walker</td>\n",
       "      <td>Rob Walker</td>\n",
       "      <td>0</td>\n",
       "      <td>131</td>\n",
       "      <td>12.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.2</td>\n",
       "      <td>7.7</td>\n",
       "      <td>8.2</td>\n",
       "      <td>7.9</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>691</td>\n",
       "      <td>8.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>Arrival</td>\n",
       "      <td>2016</td>\n",
       "      <td>47</td>\n",
       "      <td>100</td>\n",
       "      <td>Amy Adams</td>\n",
       "      <td>Jeremy Renner</td>\n",
       "      <td>Forest Whitaker</td>\n",
       "      <td>35000</td>\n",
       "      <td>5300.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.3</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.9</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>53</td>\n",
       "      <td>8.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>The Martian</td>\n",
       "      <td>2015</td>\n",
       "      <td>108</td>\n",
       "      <td>228</td>\n",
       "      <td>Matt Damon</td>\n",
       "      <td>Donald Glover</td>\n",
       "      <td>Benedict Wong</td>\n",
       "      <td>13000</td>\n",
       "      <td>801.0</td>\n",
       "      <td>372.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.9</td>\n",
       "      <td>8.2</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.9</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>120</td>\n",
       "      <td>8.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Gone Girl</td>\n",
       "      <td>2014</td>\n",
       "      <td>61</td>\n",
       "      <td>167</td>\n",
       "      <td>Patrick Fugit</td>\n",
       "      <td>Sela Ward</td>\n",
       "      <td>Emily Ratajkowski</td>\n",
       "      <td>835</td>\n",
       "      <td>812.0</td>\n",
       "      <td>625.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.6</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.1</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>106</td>\n",
       "      <td>8.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7 rows × 64 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         Title  title_year  budget  Gross  \\\n",
       "80                                    Whiplash        2014       3     13   \n",
       "36                            Django Unchained        2012     100    162   \n",
       "67                          Dallas Buyers Club        2013       5     27   \n",
       "0   Star Wars: Episode VII - The Force Awakens        2015     245    936   \n",
       "40                                     Arrival        2016      47    100   \n",
       "21                                 The Martian        2015     108    228   \n",
       "24                                   Gone Girl        2014      61    167   \n",
       "\n",
       "           actor_1_name     actor_2_name       actor_3_name  \\\n",
       "80         J.K. Simmons  Melissa Benoist       Chris Mulkey   \n",
       "36    Leonardo DiCaprio  Christoph Waltz       Ato Essandoh   \n",
       "67  Matthew McConaughey  Jennifer Garner       Denis O'Hare   \n",
       "0           Doug Walker       Rob Walker                  0   \n",
       "40            Amy Adams    Jeremy Renner    Forest Whitaker   \n",
       "21           Matt Damon    Donald Glover      Benedict Wong   \n",
       "24        Patrick Fugit        Sela Ward  Emily Ratajkowski   \n",
       "\n",
       "    actor_1_facebook_likes  actor_2_facebook_likes  actor_3_facebook_likes  \\\n",
       "80                   24000                   970.0                   535.0   \n",
       "36                   29000                 11000.0                   265.0   \n",
       "67                   11000                  3000.0                   896.0   \n",
       "0                      131                    12.0                     0.0   \n",
       "40                   35000                  5300.0                     NaN   \n",
       "21                   13000                   801.0                   372.0   \n",
       "24                     835                   812.0                   625.0   \n",
       "\n",
       "    ...  Votes45A Votes45AM Votes45AF Votes1000  VotesUS  VotesnUS  \\\n",
       "80  ...       8.1       8.1       8.2       8.0      8.6       8.4   \n",
       "36  ...       8.0       8.0       8.1       7.8      8.4       8.4   \n",
       "67  ...       7.8       7.8       8.0       7.2      8.0       7.9   \n",
       "0   ...       7.9       7.8       8.2       7.7      8.2       7.9   \n",
       "40  ...       7.6       7.6       7.7       7.3      8.0       7.9   \n",
       "21  ...       8.0       7.9       8.2       7.8      8.1       7.9   \n",
       "24  ...       7.7       7.7       7.7       7.6      8.1       8.1   \n",
       "\n",
       "    content_rating  Country  profit  Avg_rating  \n",
       "80               R      USA      10        8.65  \n",
       "36               R      USA      62        8.25  \n",
       "67               R      USA      22        8.20  \n",
       "0            PG-13      USA     691        8.10  \n",
       "40           PG-13      USA      53        8.05  \n",
       "21           PG-13      USA     120        8.00  \n",
       "24               R      USA     106        8.00  \n",
       "\n",
       "[7 rows x 64 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Find the movies with metacritic-rating < 0.5 and also with the average rating of >8\n",
    "\n",
    "UniversalAcclaim = movies[abs(movies['MetaCritic']-movies['IMDb_rating'])<0.5]\n",
    "UniversalAcclaim = UniversalAcclaim[(abs(movies['MetaCritic']-movies['IMDb_rating'])<0.5)&(movies['Avg_rating']>=8)]\n",
    "UniversalAcclaim"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**`Checkpoint 2:`** Can you spot a `Star Wars` movie in your final dataset?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- ### Subtask 2.4: Find the Most Popular Trios - I\n",
    "\n",
    "You're a producer looking to make a blockbuster movie. There will primarily be three lead roles in your movie and you wish to cast the most popular actors for it. Now, since you don't want to take a risk, you will cast a trio which has already acted in together in a movie before. The metric that you've chosen to check the popularity is the Facebook likes of each of these actors.\n",
    "\n",
    "The dataframe has three columns to help you out for the same, viz. `actor_1_facebook_likes`, `actor_2_facebook_likes`, and `actor_3_facebook_likes`. Your objective is to find the trios which has the most number of Facebook likes combined. That is, the sum of `actor_1_facebook_likes`, `actor_2_facebook_likes` and `actor_3_facebook_likes` should be maximum.\n",
    "Find out the top 5 popular trios, and output their names in a list.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>title_year</th>\n",
       "      <th>budget</th>\n",
       "      <th>Gross</th>\n",
       "      <th>actor_1_name</th>\n",
       "      <th>actor_2_name</th>\n",
       "      <th>actor_3_name</th>\n",
       "      <th>actor_1_facebook_likes</th>\n",
       "      <th>actor_2_facebook_likes</th>\n",
       "      <th>actor_3_facebook_likes</th>\n",
       "      <th>...</th>\n",
       "      <th>Votes45AM</th>\n",
       "      <th>Votes45AF</th>\n",
       "      <th>Votes1000</th>\n",
       "      <th>VotesUS</th>\n",
       "      <th>VotesnUS</th>\n",
       "      <th>content_rating</th>\n",
       "      <th>Country</th>\n",
       "      <th>profit</th>\n",
       "      <th>Avg_rating</th>\n",
       "      <th>Popularity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Lion</td>\n",
       "      <td>2016</td>\n",
       "      <td>12</td>\n",
       "      <td>51</td>\n",
       "      <td>Dev Patel</td>\n",
       "      <td>Nicole Kidman</td>\n",
       "      <td>Rooney Mara</td>\n",
       "      <td>33000</td>\n",
       "      <td>96000.0</td>\n",
       "      <td>9800.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.9</td>\n",
       "      <td>8.4</td>\n",
       "      <td>7.1</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.0</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>Australia</td>\n",
       "      <td>39</td>\n",
       "      <td>7.50</td>\n",
       "      <td>138800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Inception</td>\n",
       "      <td>2010</td>\n",
       "      <td>160</td>\n",
       "      <td>292</td>\n",
       "      <td>Leonardo DiCaprio</td>\n",
       "      <td>Tom Hardy</td>\n",
       "      <td>Joseph Gordon-Levitt</td>\n",
       "      <td>29000</td>\n",
       "      <td>27000.0</td>\n",
       "      <td>23000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.2</td>\n",
       "      <td>8.7</td>\n",
       "      <td>8.8</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>132</td>\n",
       "      <td>8.10</td>\n",
       "      <td>79000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>X-Men: Days of Future Past</td>\n",
       "      <td>2014</td>\n",
       "      <td>200</td>\n",
       "      <td>233</td>\n",
       "      <td>Jennifer Lawrence</td>\n",
       "      <td>Peter Dinklage</td>\n",
       "      <td>Hugh Jackman</td>\n",
       "      <td>34000</td>\n",
       "      <td>22000.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.7</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.4</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.9</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>33</td>\n",
       "      <td>7.70</td>\n",
       "      <td>76000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Manchester by the Sea</td>\n",
       "      <td>2016</td>\n",
       "      <td>9</td>\n",
       "      <td>47</td>\n",
       "      <td>Casey Affleck</td>\n",
       "      <td>Michelle Williams</td>\n",
       "      <td>Kyle Chandler</td>\n",
       "      <td>518</td>\n",
       "      <td>71000.0</td>\n",
       "      <td>3300.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>38</td>\n",
       "      <td>8.75</td>\n",
       "      <td>74818.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>The Dark Knight Rises</td>\n",
       "      <td>2012</td>\n",
       "      <td>250</td>\n",
       "      <td>448</td>\n",
       "      <td>Tom Hardy</td>\n",
       "      <td>Christian Bale</td>\n",
       "      <td>Joseph Gordon-Levitt</td>\n",
       "      <td>27000</td>\n",
       "      <td>23000.0</td>\n",
       "      <td>23000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.4</td>\n",
       "      <td>8.4</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>USA</td>\n",
       "      <td>198</td>\n",
       "      <td>8.10</td>\n",
       "      <td>73000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 65 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                        Title  title_year  budget  Gross       actor_1_name  \\\n",
       "0                        Lion        2016      12     51          Dev Patel   \n",
       "1                   Inception        2010     160    292  Leonardo DiCaprio   \n",
       "2  X-Men: Days of Future Past        2014     200    233  Jennifer Lawrence   \n",
       "3       Manchester by the Sea        2016       9     47      Casey Affleck   \n",
       "4       The Dark Knight Rises        2012     250    448          Tom Hardy   \n",
       "\n",
       "         actor_2_name          actor_3_name  actor_1_facebook_likes  \\\n",
       "0       Nicole Kidman           Rooney Mara                   33000   \n",
       "1           Tom Hardy  Joseph Gordon-Levitt                   29000   \n",
       "2      Peter Dinklage          Hugh Jackman                   34000   \n",
       "3  Michelle Williams          Kyle Chandler                     518   \n",
       "4      Christian Bale  Joseph Gordon-Levitt                   27000   \n",
       "\n",
       "   actor_2_facebook_likes  actor_3_facebook_likes  ...  Votes45AM Votes45AF  \\\n",
       "0                 96000.0                  9800.0  ...        7.9       8.4   \n",
       "1                 27000.0                 23000.0  ...        8.1       8.0   \n",
       "2                 22000.0                 20000.0  ...        7.7       7.9   \n",
       "3                 71000.0                  3300.0  ...        7.6       7.6   \n",
       "4                 23000.0                 23000.0  ...        7.9       7.9   \n",
       "\n",
       "  Votes1000 VotesUS  VotesnUS  content_rating    Country  profit  Avg_rating  \\\n",
       "0       7.1     8.1       8.0           PG-13  Australia      39        7.50   \n",
       "1       8.2     8.7       8.8           PG-13        USA     132        8.10   \n",
       "2       7.4     8.1       7.9           PG-13        USA      33        7.70   \n",
       "3       7.1     7.9       7.8               R        USA      38        8.75   \n",
       "4       7.8     8.4       8.4           PG-13        USA     198        8.10   \n",
       "\n",
       "   Popularity  \n",
       "0    138800.0  \n",
       "1     79000.0  \n",
       "2     76000.0  \n",
       "3     74818.0  \n",
       "4     73000.0  \n",
       "\n",
       "[5 rows x 65 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Write your code here\n",
    "movies[\"Popularity\"] = movies.loc[:,['actor_1_facebook_likes','actor_2_facebook_likes','actor_3_facebook_likes']].sum(axis=1)\n",
    "top_actor = movies.sort_values(by='Popularity', ascending=False, ignore_index = True).loc[0:4,:]\n",
    "top_actor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[['Dev Patel', 'Nicole Kidman', 'Rooney Mara'],\n",
       " ['Leonardo DiCaprio', 'Tom Hardy', 'Joseph Gordon-Levitt'],\n",
       " ['Jennifer Lawrence', 'Peter Dinklage', 'Hugh Jackman'],\n",
       " ['Casey Affleck', 'Michelle Williams ', 'Kyle Chandler'],\n",
       " ['Tom Hardy', 'Christian Bale', 'Joseph Gordon-Levitt']]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Top_5_popular_trios = movies.sort_values(by='Popularity',ascending=False, ignore_index = True).loc[0:4,['actor_1_name','actor_2_name','actor_3_name']].values.tolist()\n",
    "Top_5_popular_trios"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Actor 1 ['Dev Patel', 'Leonardo DiCaprio', 'Jennifer Lawrence', 'Casey Affleck', 'Tom Hardy'] Actor 2 ['Nicole Kidman', 'Tom Hardy', 'Peter Dinklage', 'Michelle Williams ', 'Christian Bale'] Actor 3 ['Rooney Mara', 'Joseph Gordon-Levitt', 'Hugh Jackman', 'Kyle Chandler', 'Joseph Gordon-Levitt']\n"
     ]
    }
   ],
   "source": [
    "Top_5_Actor1 = top_actor['actor_1_name'].tolist()\n",
    "Top_5_Actor2 = top_actor['actor_2_name'].tolist()\n",
    "Top_5_Actor3 = top_actor['actor_3_name'].tolist()\n",
    "\n",
    "print(\"Actor 1\",Top_5_Actor1,\"Actor 2\",Top_5_Actor2,\"Actor 3\",Top_5_Actor3)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- ### Subtask 2.5: Find the Most Popular Trios - II\n",
    "\n",
    "In the previous subtask you found the popular trio based on the total number of facebook likes. Let's add a small condition to it and make sure that all three actors are popular. The condition is **none of the three actors' Facebook likes should be less than half of the other two**. For example, the following is a valid combo:\n",
    "- actor_1_facebook_likes: 70000\n",
    "- actor_2_facebook_likes: 40000\n",
    "- actor_3_facebook_likes: 50000\n",
    "\n",
    "But the below one is not:\n",
    "- actor_1_facebook_likes: 70000\n",
    "- actor_2_facebook_likes: 40000\n",
    "- actor_3_facebook_likes: 30000\n",
    "\n",
    "since in this case, `actor_3_facebook_likes` is 30000, which is less than half of `actor_1_facebook_likes`.\n",
    "\n",
    "Having this condition ensures that you aren't getting any unpopular actor in your trio (since the total likes calculated in the previous question doesn't tell anything about the individual popularities of each actor in the trio.).\n",
    "\n",
    "You can do a manual inspection of the top 5 popular trios you have found in the previous subtask and check how many of those trios satisfy this condition. Also, which is the most popular trio after applying the condition above?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Write your answers below.**\n",
    "\n",
    "- **`No. of trios that satisfy the above condition:`** 3\n",
    "\n",
    "- **`Most popular trio after applying the condition:`**['Leonardo DiCaprio', 'Tom Hardy', 'Joseph Gordon-Levitt']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**`Optional:`** Even though you are finding this out by a natural inspection of the dataframe, can you also achieve this through some *if-else* statements to incorporate this. You can try this out on your own time after you are done with the assignment."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[['Leonardo DiCaprio', 'Tom Hardy', 'Joseph Gordon-Levitt'],\n",
       " ['Jennifer Lawrence', 'Peter Dinklage', 'Hugh Jackman'],\n",
       " ['Tom Hardy', 'Christian Bale', 'Joseph Gordon-Levitt']]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Your answer here (optional)\n",
    "\n",
    "ind_pop = movies[~((((movies['actor_1_facebook_likes']<movies['actor_2_facebook_likes']/2)\n",
    "                     |(movies['actor_1_facebook_likes']<movies['actor_3_facebook_likes']/2))== True)\n",
    "                  |(((movies['actor_2_facebook_likes']<movies['actor_1_facebook_likes']/2)|\n",
    "                    (movies['actor_2_facebook_likes']<movies['actor_3_facebook_likes']/2))== True)\n",
    "                  |(((movies['actor_3_facebook_likes']<movies['actor_1_facebook_likes']/2)|\n",
    "                     (movies['actor_2_facebook_likes']<movies['actor_3_facebook_likes']/2))== True))]\n",
    "#No. of trios that satisfy the above condition\n",
    "\n",
    "most_pop = top_actor[top_actor['Title'].isin(ind_pop['Title'])]\n",
    "\n",
    "most_pop.loc[:,['actor_1_name','actor_2_name','actor_3_name']].values.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[['Leonardo DiCaprio', 'Tom Hardy', 'Joseph Gordon-Levitt'],\n",
       " ['Jennifer Lawrence', 'Peter Dinklage', 'Hugh Jackman'],\n",
       " ['Tom Hardy', 'Christian Bale', 'Joseph Gordon-Levitt'],\n",
       " ['Chris Hemsworth', 'Robert Downey Jr.', 'Scarlett Johansson'],\n",
       " ['Philip Seymour Hoffman', 'Robin Wright', 'Brad Pitt']]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_ind_pop = ind_pop.sort_values(by='Popularity', ascending = False)[0:5].reset_index(drop = True)\n",
    "\n",
    "top_ind_pop.loc[0:5,['actor_1_name','actor_2_name','actor_3_name']].values.tolist()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- ### Subtask 2.6: Runtime Analysis\n",
    "\n",
    "There is a column named `Runtime` in the dataframe which primarily shows the length of the movie. It might be intersting to see how this variable this distributed. Plot a `histogram` or `distplot` of seaborn to find the `Runtime` range most of the movies fall into."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Runtime histogram/density plot\n",
    "plt.figure(figsize=[9,5])\n",
    "run = sns.distplot(movies['Runtime'])\n",
    "plt.suptitle(\"Movie RunTime Distribution\", fontsize=20)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**`Checkpoint 3:`** Most of the movies appear to be sharply 2 hour-long."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- ### Subtask 2.7: R-Rated Movies\n",
    "\n",
    "Although R rated movies are restricted movies for the under 18 age group, still there are vote counts from that age group. Among all the R rated movies that have been voted by the under-18 age group, find the top 10 movies that have the highest number of votes i.e.`CVotesU18` from the `movies` dataframe. Store these in a dataframe named `PopularR`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>title_year</th>\n",
       "      <th>budget</th>\n",
       "      <th>Gross</th>\n",
       "      <th>actor_1_name</th>\n",
       "      <th>actor_2_name</th>\n",
       "      <th>actor_3_name</th>\n",
       "      <th>actor_1_facebook_likes</th>\n",
       "      <th>actor_2_facebook_likes</th>\n",
       "      <th>actor_3_facebook_likes</th>\n",
       "      <th>...</th>\n",
       "      <th>Votes45AM</th>\n",
       "      <th>Votes45AF</th>\n",
       "      <th>Votes1000</th>\n",
       "      <th>VotesUS</th>\n",
       "      <th>VotesnUS</th>\n",
       "      <th>content_rating</th>\n",
       "      <th>Country</th>\n",
       "      <th>profit</th>\n",
       "      <th>Avg_rating</th>\n",
       "      <th>Popularity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Deadpool</td>\n",
       "      <td>2016</td>\n",
       "      <td>58</td>\n",
       "      <td>363</td>\n",
       "      <td>Ryan Reynolds</td>\n",
       "      <td>Ed Skrein</td>\n",
       "      <td>Stefan Kapicic</td>\n",
       "      <td>16000</td>\n",
       "      <td>805.0</td>\n",
       "      <td>361.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.8</td>\n",
       "      <td>7.9</td>\n",
       "      <td>7.3</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.9</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>305</td>\n",
       "      <td>7.25</td>\n",
       "      <td>17166.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>The Wolf of Wall Street</td>\n",
       "      <td>2013</td>\n",
       "      <td>100</td>\n",
       "      <td>116</td>\n",
       "      <td>Leonardo DiCaprio</td>\n",
       "      <td>Matthew McConaughey</td>\n",
       "      <td>Jon Favreau</td>\n",
       "      <td>29000</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>4000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.6</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.1</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>16</td>\n",
       "      <td>7.85</td>\n",
       "      <td>44000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Django Unchained</td>\n",
       "      <td>2012</td>\n",
       "      <td>100</td>\n",
       "      <td>162</td>\n",
       "      <td>Leonardo DiCaprio</td>\n",
       "      <td>Christoph Waltz</td>\n",
       "      <td>Ato Essandoh</td>\n",
       "      <td>29000</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>265.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.1</td>\n",
       "      <td>7.8</td>\n",
       "      <td>8.4</td>\n",
       "      <td>8.4</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>62</td>\n",
       "      <td>8.25</td>\n",
       "      <td>40265.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Mad Max: Fury Road</td>\n",
       "      <td>2015</td>\n",
       "      <td>150</td>\n",
       "      <td>153</td>\n",
       "      <td>Tom Hardy</td>\n",
       "      <td>Charlize Theron</td>\n",
       "      <td>ZoÃ« Kravitz</td>\n",
       "      <td>27000</td>\n",
       "      <td>9000.0</td>\n",
       "      <td>943.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>R</td>\n",
       "      <td>Australia</td>\n",
       "      <td>3</td>\n",
       "      <td>8.55</td>\n",
       "      <td>36943.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Whiplash</td>\n",
       "      <td>2014</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>J.K. Simmons</td>\n",
       "      <td>Melissa Benoist</td>\n",
       "      <td>Chris Mulkey</td>\n",
       "      <td>24000</td>\n",
       "      <td>970.0</td>\n",
       "      <td>535.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.1</td>\n",
       "      <td>8.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.6</td>\n",
       "      <td>8.4</td>\n",
       "      <td>R</td>\n",
       "      <td>USA</td>\n",
       "      <td>10</td>\n",
       "      <td>8.65</td>\n",
       "      <td>25505.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 65 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Title  title_year  budget  Gross       actor_1_name  \\\n",
       "0                 Deadpool        2016      58    363      Ryan Reynolds   \n",
       "1  The Wolf of Wall Street        2013     100    116  Leonardo DiCaprio   \n",
       "2         Django Unchained        2012     100    162  Leonardo DiCaprio   \n",
       "3       Mad Max: Fury Road        2015     150    153          Tom Hardy   \n",
       "4                 Whiplash        2014       3     13       J.K. Simmons   \n",
       "\n",
       "          actor_2_name    actor_3_name  actor_1_facebook_likes  \\\n",
       "0            Ed Skrein  Stefan Kapicic                   16000   \n",
       "1  Matthew McConaughey     Jon Favreau                   29000   \n",
       "2      Christoph Waltz    Ato Essandoh                   29000   \n",
       "3      Charlize Theron    ZoÃ« Kravitz                   27000   \n",
       "4      Melissa Benoist    Chris Mulkey                   24000   \n",
       "\n",
       "   actor_2_facebook_likes  actor_3_facebook_likes  ...  Votes45AM Votes45AF  \\\n",
       "0                   805.0                   361.0  ...        7.8       7.9   \n",
       "1                 11000.0                  4000.0  ...        7.6       7.5   \n",
       "2                 11000.0                   265.0  ...        8.0       8.1   \n",
       "3                  9000.0                   943.0  ...        7.5       7.2   \n",
       "4                   970.0                   535.0  ...        8.1       8.2   \n",
       "\n",
       "  Votes1000 VotesUS  VotesnUS  content_rating    Country  profit  Avg_rating  \\\n",
       "0       7.3     8.1       7.9               R        USA     305        7.25   \n",
       "1       7.8     8.1       8.1               R        USA      16        7.85   \n",
       "2       7.8     8.4       8.4               R        USA      62        8.25   \n",
       "3       8.0     8.2       8.0               R  Australia       3        8.55   \n",
       "4       8.0     8.6       8.4               R        USA      10        8.65   \n",
       "\n",
       "   Popularity  \n",
       "0     17166.0  \n",
       "1     44000.0  \n",
       "2     40265.0  \n",
       "3     36943.0  \n",
       "4     25505.0  \n",
       "\n",
       "[5 rows x 65 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Write your code here\n",
    "cont_r = movies[movies['content_rating']=='R']\n",
    "\n",
    "PopularR = cont_r.sort_values(by='CVotesU18', ascending = False, ignore_index=True)[0:10]\n",
    "\n",
    "PopularR[0:5]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**`Checkpoint 4:`** Are these kids watching `Deadpool` a lot?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Task 3 : Demographic analysis\n",
    "\n",
    "If you take a look at the last columns in the dataframe, most of these are related to demographics of the voters (in the last subtask, i.e., 2.8, you made use one of these columns - CVotesU18). We also have three genre columns indicating the genres of a particular movie. We will extensively use these columns for the third and the final stage of our assignment wherein we will analyse the voters across all demographics and also see how these vary across various genres. So without further ado, let's get started with `demographic analysis`."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-  ###  Subtask 3.1 Combine the Dataframe by Genres\n",
    "\n",
    "There are 3 columns in the dataframe - `genre_1`, `genre_2`, and `genre_3`. As a part of this subtask, you need to aggregate a few values over these 3 columns. \n",
    "1. First create a new dataframe `df_by_genre` that contains `genre_1`, `genre_2`, and `genre_3` and all the columns related to **CVotes/Votes** from the `movies` data frame. There are 47 columns to be extracted in total.\n",
    "2. Now, Add a column called `cnt` to the dataframe `df_by_genre` and initialize it to one. You will realise the use of this column by the end of this subtask.\n",
    "3. First group the dataframe `df_by_genre` by `genre_1` and find the sum of all the numeric columns such as `cnt`, columns related to CVotes and Votes columns and store it in a dataframe `df_by_g1`.\n",
    "4. Perform the same operation for `genre_2` and `genre_3` and store it dataframes `df_by_g2` and `df_by_g3` respectively. \n",
    "5. Now that you have 3 dataframes performed by grouping over `genre_1`, `genre_2`, and `genre_3` separately, it's time to combine them. For this, add the three dataframes and store it in a new dataframe `df_add`, so that the corresponding values of Votes/CVotes get added for each genre.There is a function called `add()` in pandas which lets you do this. You can refer to this link to see how this function works. https://pandas.pydata.org/pandas-docs/version/0.23.4/generated/pandas.DataFrame.add.html\n",
    "6. The column `cnt` on aggregation has basically kept the track of the number of occurences of each genre.Subset the genres that have atleast 10 movies into a new dataframe `genre_top10` based on the `cnt` column value.\n",
    "7. Now, take the mean of all the numeric columns by dividing them with the column value `cnt` and store it back to the same dataframe. We will be using this dataframe for further analysis in this task unless it is explicitly mentioned to use the dataframe `movies`.\n",
    "8. Since the number of votes can't be a fraction, type cast all the CVotes related columns to integers. Also, round off all the Votes related columns upto two digits after the decimal point.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create the dataframe df_by_genre\n",
    "column_list=[]\n",
    "for i in movies.columns:\n",
    "    if i.startswith('CV')|i.startswith('V')|i.startswith('ge'):\n",
    "        column_list.append(i)\n",
    "df_by_genre = movies.loc[:, column_list]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a column cnt and initialize it to 1\n",
    "df_by_genre['cnt']=1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Group the movies by individual genres\n",
    "df_by_g1 = df_by_genre.groupby('genre_1')\n",
    "df_by_g2 = df_by_genre.groupby('genre_2')\n",
    "df_by_g3 = df_by_genre.groupby('genre_3')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "# finding the sum for genres\n",
    "df_by_g1 =pd.DataFrame(df_by_g1.sum())\n",
    "df_by_g2 =pd.DataFrame(df_by_g2.sum())\n",
    "df_by_g3 =pd.DataFrame(df_by_g3.sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CVotes10</th>\n",
       "      <th>CVotes09</th>\n",
       "      <th>CVotes08</th>\n",
       "      <th>CVotes07</th>\n",
       "      <th>CVotes06</th>\n",
       "      <th>CVotes05</th>\n",
       "      <th>CVotes04</th>\n",
       "      <th>CVotes03</th>\n",
       "      <th>CVotes02</th>\n",
       "      <th>CVotes01</th>\n",
       "      <th>...</th>\n",
       "      <th>Votes3044</th>\n",
       "      <th>Votes3044M</th>\n",
       "      <th>Votes3044F</th>\n",
       "      <th>Votes45A</th>\n",
       "      <th>Votes45AM</th>\n",
       "      <th>Votes45AF</th>\n",
       "      <th>Votes1000</th>\n",
       "      <th>VotesUS</th>\n",
       "      <th>VotesnUS</th>\n",
       "      <th>cnt</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Action</th>\n",
       "      <td>3166467.0</td>\n",
       "      <td>3547429.0</td>\n",
       "      <td>4677755.0</td>\n",
       "      <td>2922126.0</td>\n",
       "      <td>1075354.0</td>\n",
       "      <td>393484.0</td>\n",
       "      <td>166970.0</td>\n",
       "      <td>95004.0</td>\n",
       "      <td>65573.0</td>\n",
       "      <td>171247.0</td>\n",
       "      <td>...</td>\n",
       "      <td>240.0</td>\n",
       "      <td>239.5</td>\n",
       "      <td>241.8</td>\n",
       "      <td>237.0</td>\n",
       "      <td>236.4</td>\n",
       "      <td>240.4</td>\n",
       "      <td>226.2</td>\n",
       "      <td>247.6</td>\n",
       "      <td>240.6</td>\n",
       "      <td>31.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Adventure</th>\n",
       "      <td>3594659.0</td>\n",
       "      <td>4014192.0</td>\n",
       "      <td>5262328.0</td>\n",
       "      <td>3281981.0</td>\n",
       "      <td>1212075.0</td>\n",
       "      <td>438970.0</td>\n",
       "      <td>183070.0</td>\n",
       "      <td>103318.0</td>\n",
       "      <td>69737.0</td>\n",
       "      <td>173858.0</td>\n",
       "      <td>...</td>\n",
       "      <td>294.6</td>\n",
       "      <td>293.7</td>\n",
       "      <td>299.2</td>\n",
       "      <td>291.7</td>\n",
       "      <td>290.4</td>\n",
       "      <td>298.0</td>\n",
       "      <td>280.6</td>\n",
       "      <td>303.5</td>\n",
       "      <td>296.2</td>\n",
       "      <td>38.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Animation</th>\n",
       "      <td>681562.0</td>\n",
       "      <td>798227.0</td>\n",
       "      <td>1153214.0</td>\n",
       "      <td>722782.0</td>\n",
       "      <td>251076.0</td>\n",
       "      <td>83069.0</td>\n",
       "      <td>30718.0</td>\n",
       "      <td>15733.0</td>\n",
       "      <td>10026.0</td>\n",
       "      <td>25193.0</td>\n",
       "      <td>...</td>\n",
       "      <td>85.4</td>\n",
       "      <td>84.9</td>\n",
       "      <td>87.8</td>\n",
       "      <td>84.5</td>\n",
       "      <td>84.1</td>\n",
       "      <td>86.7</td>\n",
       "      <td>80.0</td>\n",
       "      <td>87.6</td>\n",
       "      <td>86.1</td>\n",
       "      <td>11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Biography</th>\n",
       "      <td>852003.0</td>\n",
       "      <td>1401608.0</td>\n",
       "      <td>2231078.0</td>\n",
       "      <td>1332980.0</td>\n",
       "      <td>425595.0</td>\n",
       "      <td>138648.0</td>\n",
       "      <td>53718.0</td>\n",
       "      <td>29510.0</td>\n",
       "      <td>20613.0</td>\n",
       "      <td>51297.0</td>\n",
       "      <td>...</td>\n",
       "      <td>139.1</td>\n",
       "      <td>138.9</td>\n",
       "      <td>139.8</td>\n",
       "      <td>138.5</td>\n",
       "      <td>137.9</td>\n",
       "      <td>141.7</td>\n",
       "      <td>130.1</td>\n",
       "      <td>142.7</td>\n",
       "      <td>139.9</td>\n",
       "      <td>18.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Comedy</th>\n",
       "      <td>1383616.0</td>\n",
       "      <td>1774987.0</td>\n",
       "      <td>2506851.0</td>\n",
       "      <td>1591069.0</td>\n",
       "      <td>600287.0</td>\n",
       "      <td>226852.0</td>\n",
       "      <td>97469.0</td>\n",
       "      <td>56218.0</td>\n",
       "      <td>39391.0</td>\n",
       "      <td>88367.0</td>\n",
       "      <td>...</td>\n",
       "      <td>177.4</td>\n",
       "      <td>177.4</td>\n",
       "      <td>178.3</td>\n",
       "      <td>175.0</td>\n",
       "      <td>174.7</td>\n",
       "      <td>177.1</td>\n",
       "      <td>165.4</td>\n",
       "      <td>182.6</td>\n",
       "      <td>178.9</td>\n",
       "      <td>23.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 45 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            CVotes10   CVotes09   CVotes08   CVotes07   CVotes06  CVotes05  \\\n",
       "Action     3166467.0  3547429.0  4677755.0  2922126.0  1075354.0  393484.0   \n",
       "Adventure  3594659.0  4014192.0  5262328.0  3281981.0  1212075.0  438970.0   \n",
       "Animation   681562.0   798227.0  1153214.0   722782.0   251076.0   83069.0   \n",
       "Biography   852003.0  1401608.0  2231078.0  1332980.0   425595.0  138648.0   \n",
       "Comedy     1383616.0  1774987.0  2506851.0  1591069.0   600287.0  226852.0   \n",
       "\n",
       "           CVotes04  CVotes03  CVotes02  CVotes01  ...  Votes3044  Votes3044M  \\\n",
       "Action     166970.0   95004.0   65573.0  171247.0  ...      240.0       239.5   \n",
       "Adventure  183070.0  103318.0   69737.0  173858.0  ...      294.6       293.7   \n",
       "Animation   30718.0   15733.0   10026.0   25193.0  ...       85.4        84.9   \n",
       "Biography   53718.0   29510.0   20613.0   51297.0  ...      139.1       138.9   \n",
       "Comedy      97469.0   56218.0   39391.0   88367.0  ...      177.4       177.4   \n",
       "\n",
       "           Votes3044F  Votes45A  Votes45AM  Votes45AF  Votes1000  VotesUS  \\\n",
       "Action          241.8     237.0      236.4      240.4      226.2    247.6   \n",
       "Adventure       299.2     291.7      290.4      298.0      280.6    303.5   \n",
       "Animation        87.8      84.5       84.1       86.7       80.0     87.6   \n",
       "Biography       139.8     138.5      137.9      141.7      130.1    142.7   \n",
       "Comedy          178.3     175.0      174.7      177.1      165.4    182.6   \n",
       "\n",
       "           VotesnUS   cnt  \n",
       "Action        240.6  31.0  \n",
       "Adventure     296.2  38.0  \n",
       "Animation      86.1  11.0  \n",
       "Biography     139.9  18.0  \n",
       "Comedy        178.9  23.0  \n",
       "\n",
       "[5 rows x 45 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Add the grouped data frames and store it in a new data frame\n",
    "add_df1_df2 = df_by_g1.add(df_by_g2, fill_value=0)\n",
    "df_add = add_df1_df2.add(df_by_g3, fill_value=0)\n",
    "\n",
    "genre_top10 = df_add[df_add['cnt']>=10]\n",
    "\n",
    "genre_top10.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Action       31.0\n",
       "Adventure    38.0\n",
       "Animation    11.0\n",
       "Biography    18.0\n",
       "Comedy       23.0\n",
       "Crime        11.0\n",
       "Drama        65.0\n",
       "Romance      13.0\n",
       "Sci-Fi       17.0\n",
       "Thriller     13.0\n",
       "Name: cnt, dtype: float64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Extract genres with atleast 10 occurences\n",
    "\n",
    "occ10 = genre_top10['cnt']\n",
    "occ10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CVotes10</th>\n",
       "      <th>CVotes09</th>\n",
       "      <th>CVotes08</th>\n",
       "      <th>CVotes07</th>\n",
       "      <th>CVotes06</th>\n",
       "      <th>CVotes05</th>\n",
       "      <th>CVotes04</th>\n",
       "      <th>CVotes03</th>\n",
       "      <th>CVotes02</th>\n",
       "      <th>CVotes01</th>\n",
       "      <th>...</th>\n",
       "      <th>Votes3044</th>\n",
       "      <th>Votes3044M</th>\n",
       "      <th>Votes3044F</th>\n",
       "      <th>Votes45A</th>\n",
       "      <th>Votes45AM</th>\n",
       "      <th>Votes45AF</th>\n",
       "      <th>Votes1000</th>\n",
       "      <th>VotesUS</th>\n",
       "      <th>VotesnUS</th>\n",
       "      <th>cnt</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Action</th>\n",
       "      <td>102144.096774</td>\n",
       "      <td>114433.193548</td>\n",
       "      <td>150895.322581</td>\n",
       "      <td>94262.129032</td>\n",
       "      <td>34688.838710</td>\n",
       "      <td>12693.032258</td>\n",
       "      <td>5386.129032</td>\n",
       "      <td>3064.645161</td>\n",
       "      <td>2115.258065</td>\n",
       "      <td>5524.096774</td>\n",
       "      <td>...</td>\n",
       "      <td>7.741935</td>\n",
       "      <td>7.725806</td>\n",
       "      <td>7.800000</td>\n",
       "      <td>7.645161</td>\n",
       "      <td>7.625806</td>\n",
       "      <td>7.754839</td>\n",
       "      <td>7.296774</td>\n",
       "      <td>7.987097</td>\n",
       "      <td>7.761290</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Adventure</th>\n",
       "      <td>94596.289474</td>\n",
       "      <td>105636.631579</td>\n",
       "      <td>138482.315789</td>\n",
       "      <td>86367.921053</td>\n",
       "      <td>31896.710526</td>\n",
       "      <td>11551.842105</td>\n",
       "      <td>4817.631579</td>\n",
       "      <td>2718.894737</td>\n",
       "      <td>1835.184211</td>\n",
       "      <td>4575.210526</td>\n",
       "      <td>...</td>\n",
       "      <td>7.752632</td>\n",
       "      <td>7.728947</td>\n",
       "      <td>7.873684</td>\n",
       "      <td>7.676316</td>\n",
       "      <td>7.642105</td>\n",
       "      <td>7.842105</td>\n",
       "      <td>7.384211</td>\n",
       "      <td>7.986842</td>\n",
       "      <td>7.794737</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Animation</th>\n",
       "      <td>61960.181818</td>\n",
       "      <td>72566.090909</td>\n",
       "      <td>104837.636364</td>\n",
       "      <td>65707.454545</td>\n",
       "      <td>22825.090909</td>\n",
       "      <td>7551.727273</td>\n",
       "      <td>2792.545455</td>\n",
       "      <td>1430.272727</td>\n",
       "      <td>911.454545</td>\n",
       "      <td>2290.272727</td>\n",
       "      <td>...</td>\n",
       "      <td>7.763636</td>\n",
       "      <td>7.718182</td>\n",
       "      <td>7.981818</td>\n",
       "      <td>7.681818</td>\n",
       "      <td>7.645455</td>\n",
       "      <td>7.881818</td>\n",
       "      <td>7.272727</td>\n",
       "      <td>7.963636</td>\n",
       "      <td>7.827273</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Biography</th>\n",
       "      <td>47333.500000</td>\n",
       "      <td>77867.111111</td>\n",
       "      <td>123948.777778</td>\n",
       "      <td>74054.444444</td>\n",
       "      <td>23644.166667</td>\n",
       "      <td>7702.666667</td>\n",
       "      <td>2984.333333</td>\n",
       "      <td>1639.444444</td>\n",
       "      <td>1145.166667</td>\n",
       "      <td>2849.833333</td>\n",
       "      <td>...</td>\n",
       "      <td>7.727778</td>\n",
       "      <td>7.716667</td>\n",
       "      <td>7.766667</td>\n",
       "      <td>7.694444</td>\n",
       "      <td>7.661111</td>\n",
       "      <td>7.872222</td>\n",
       "      <td>7.227778</td>\n",
       "      <td>7.927778</td>\n",
       "      <td>7.772222</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Comedy</th>\n",
       "      <td>60157.217391</td>\n",
       "      <td>77173.347826</td>\n",
       "      <td>108993.521739</td>\n",
       "      <td>69176.913043</td>\n",
       "      <td>26099.434783</td>\n",
       "      <td>9863.130435</td>\n",
       "      <td>4237.782609</td>\n",
       "      <td>2444.260870</td>\n",
       "      <td>1712.652174</td>\n",
       "      <td>3842.043478</td>\n",
       "      <td>...</td>\n",
       "      <td>7.713043</td>\n",
       "      <td>7.713043</td>\n",
       "      <td>7.752174</td>\n",
       "      <td>7.608696</td>\n",
       "      <td>7.595652</td>\n",
       "      <td>7.700000</td>\n",
       "      <td>7.191304</td>\n",
       "      <td>7.939130</td>\n",
       "      <td>7.778261</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Crime</th>\n",
       "      <td>52229.636364</td>\n",
       "      <td>87919.818182</td>\n",
       "      <td>129045.000000</td>\n",
       "      <td>74671.818182</td>\n",
       "      <td>25308.272727</td>\n",
       "      <td>8971.818182</td>\n",
       "      <td>3842.818182</td>\n",
       "      <td>2246.636364</td>\n",
       "      <td>1544.090909</td>\n",
       "      <td>3383.363636</td>\n",
       "      <td>...</td>\n",
       "      <td>7.718182</td>\n",
       "      <td>7.763636</td>\n",
       "      <td>7.609091</td>\n",
       "      <td>7.627273</td>\n",
       "      <td>7.618182</td>\n",
       "      <td>7.681818</td>\n",
       "      <td>7.390909</td>\n",
       "      <td>7.981818</td>\n",
       "      <td>7.800000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Drama</th>\n",
       "      <td>52375.969231</td>\n",
       "      <td>75928.846154</td>\n",
       "      <td>109339.276923</td>\n",
       "      <td>66456.923077</td>\n",
       "      <td>23528.553846</td>\n",
       "      <td>8497.107692</td>\n",
       "      <td>3622.692308</td>\n",
       "      <td>2078.861538</td>\n",
       "      <td>1449.000000</td>\n",
       "      <td>3250.892308</td>\n",
       "      <td>...</td>\n",
       "      <td>7.712308</td>\n",
       "      <td>7.709231</td>\n",
       "      <td>7.720000</td>\n",
       "      <td>7.643077</td>\n",
       "      <td>7.620000</td>\n",
       "      <td>7.741538</td>\n",
       "      <td>7.223077</td>\n",
       "      <td>7.936923</td>\n",
       "      <td>7.784615</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Romance</th>\n",
       "      <td>42304.538462</td>\n",
       "      <td>53037.846154</td>\n",
       "      <td>82252.307692</td>\n",
       "      <td>54833.923077</td>\n",
       "      <td>21637.615385</td>\n",
       "      <td>8530.846154</td>\n",
       "      <td>3762.538462</td>\n",
       "      <td>2130.615385</td>\n",
       "      <td>1476.923077</td>\n",
       "      <td>3082.692308</td>\n",
       "      <td>...</td>\n",
       "      <td>7.607692</td>\n",
       "      <td>7.607692</td>\n",
       "      <td>7.661538</td>\n",
       "      <td>7.523077</td>\n",
       "      <td>7.500000</td>\n",
       "      <td>7.607692</td>\n",
       "      <td>6.915385</td>\n",
       "      <td>7.830769</td>\n",
       "      <td>7.700000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sci-Fi</th>\n",
       "      <td>136781.411765</td>\n",
       "      <td>148873.823529</td>\n",
       "      <td>176646.705882</td>\n",
       "      <td>106005.764706</td>\n",
       "      <td>39518.294118</td>\n",
       "      <td>14951.470588</td>\n",
       "      <td>6583.823529</td>\n",
       "      <td>3876.705882</td>\n",
       "      <td>2715.941176</td>\n",
       "      <td>6731.470588</td>\n",
       "      <td>...</td>\n",
       "      <td>7.858824</td>\n",
       "      <td>7.852941</td>\n",
       "      <td>7.835294</td>\n",
       "      <td>7.711765</td>\n",
       "      <td>7.694118</td>\n",
       "      <td>7.735294</td>\n",
       "      <td>7.523529</td>\n",
       "      <td>8.088235</td>\n",
       "      <td>7.882353</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Thriller</th>\n",
       "      <td>83207.769231</td>\n",
       "      <td>112730.076923</td>\n",
       "      <td>153336.769231</td>\n",
       "      <td>90446.076923</td>\n",
       "      <td>32003.538462</td>\n",
       "      <td>11534.846154</td>\n",
       "      <td>5021.615385</td>\n",
       "      <td>2918.461538</td>\n",
       "      <td>1982.076923</td>\n",
       "      <td>4433.076923</td>\n",
       "      <td>...</td>\n",
       "      <td>7.738462</td>\n",
       "      <td>7.746154</td>\n",
       "      <td>7.700000</td>\n",
       "      <td>7.661538</td>\n",
       "      <td>7.638462</td>\n",
       "      <td>7.746154</td>\n",
       "      <td>7.400000</td>\n",
       "      <td>7.930769</td>\n",
       "      <td>7.807692</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 45 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                CVotes10       CVotes09       CVotes08       CVotes07  \\\n",
       "Action     102144.096774  114433.193548  150895.322581   94262.129032   \n",
       "Adventure   94596.289474  105636.631579  138482.315789   86367.921053   \n",
       "Animation   61960.181818   72566.090909  104837.636364   65707.454545   \n",
       "Biography   47333.500000   77867.111111  123948.777778   74054.444444   \n",
       "Comedy      60157.217391   77173.347826  108993.521739   69176.913043   \n",
       "Crime       52229.636364   87919.818182  129045.000000   74671.818182   \n",
       "Drama       52375.969231   75928.846154  109339.276923   66456.923077   \n",
       "Romance     42304.538462   53037.846154   82252.307692   54833.923077   \n",
       "Sci-Fi     136781.411765  148873.823529  176646.705882  106005.764706   \n",
       "Thriller    83207.769231  112730.076923  153336.769231   90446.076923   \n",
       "\n",
       "               CVotes06      CVotes05     CVotes04     CVotes03     CVotes02  \\\n",
       "Action     34688.838710  12693.032258  5386.129032  3064.645161  2115.258065   \n",
       "Adventure  31896.710526  11551.842105  4817.631579  2718.894737  1835.184211   \n",
       "Animation  22825.090909   7551.727273  2792.545455  1430.272727   911.454545   \n",
       "Biography  23644.166667   7702.666667  2984.333333  1639.444444  1145.166667   \n",
       "Comedy     26099.434783   9863.130435  4237.782609  2444.260870  1712.652174   \n",
       "Crime      25308.272727   8971.818182  3842.818182  2246.636364  1544.090909   \n",
       "Drama      23528.553846   8497.107692  3622.692308  2078.861538  1449.000000   \n",
       "Romance    21637.615385   8530.846154  3762.538462  2130.615385  1476.923077   \n",
       "Sci-Fi     39518.294118  14951.470588  6583.823529  3876.705882  2715.941176   \n",
       "Thriller   32003.538462  11534.846154  5021.615385  2918.461538  1982.076923   \n",
       "\n",
       "              CVotes01  ...  Votes3044  Votes3044M  Votes3044F  Votes45A  \\\n",
       "Action     5524.096774  ...   7.741935    7.725806    7.800000  7.645161   \n",
       "Adventure  4575.210526  ...   7.752632    7.728947    7.873684  7.676316   \n",
       "Animation  2290.272727  ...   7.763636    7.718182    7.981818  7.681818   \n",
       "Biography  2849.833333  ...   7.727778    7.716667    7.766667  7.694444   \n",
       "Comedy     3842.043478  ...   7.713043    7.713043    7.752174  7.608696   \n",
       "Crime      3383.363636  ...   7.718182    7.763636    7.609091  7.627273   \n",
       "Drama      3250.892308  ...   7.712308    7.709231    7.720000  7.643077   \n",
       "Romance    3082.692308  ...   7.607692    7.607692    7.661538  7.523077   \n",
       "Sci-Fi     6731.470588  ...   7.858824    7.852941    7.835294  7.711765   \n",
       "Thriller   4433.076923  ...   7.738462    7.746154    7.700000  7.661538   \n",
       "\n",
       "           Votes45AM  Votes45AF  Votes1000   VotesUS  VotesnUS  cnt  \n",
       "Action      7.625806   7.754839   7.296774  7.987097  7.761290  1.0  \n",
       "Adventure   7.642105   7.842105   7.384211  7.986842  7.794737  1.0  \n",
       "Animation   7.645455   7.881818   7.272727  7.963636  7.827273  1.0  \n",
       "Biography   7.661111   7.872222   7.227778  7.927778  7.772222  1.0  \n",
       "Comedy      7.595652   7.700000   7.191304  7.939130  7.778261  1.0  \n",
       "Crime       7.618182   7.681818   7.390909  7.981818  7.800000  1.0  \n",
       "Drama       7.620000   7.741538   7.223077  7.936923  7.784615  1.0  \n",
       "Romance     7.500000   7.607692   6.915385  7.830769  7.700000  1.0  \n",
       "Sci-Fi      7.694118   7.735294   7.523529  8.088235  7.882353  1.0  \n",
       "Thriller    7.638462   7.746154   7.400000  7.930769  7.807692  1.0  \n",
       "\n",
       "[10 rows x 45 columns]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Take the mean for every column by dividing with cnt \n",
    "genre_top10= genre_top10.div(genre_top10['cnt'], axis='index')\n",
    "genre_top10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Rounding off the columns of Votes to two decimals\n",
    "\n",
    "genre_top10=genre_top10.apply(lambda x : round(x,2), axis = 0)\n",
    "genre_top10.drop(columns = 'cnt', inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CVotes10</th>\n",
       "      <th>CVotes09</th>\n",
       "      <th>CVotes08</th>\n",
       "      <th>CVotes07</th>\n",
       "      <th>CVotes06</th>\n",
       "      <th>CVotes05</th>\n",
       "      <th>CVotes04</th>\n",
       "      <th>CVotes03</th>\n",
       "      <th>CVotes02</th>\n",
       "      <th>CVotes01</th>\n",
       "      <th>...</th>\n",
       "      <th>Votes1829F</th>\n",
       "      <th>Votes3044</th>\n",
       "      <th>Votes3044M</th>\n",
       "      <th>Votes3044F</th>\n",
       "      <th>Votes45A</th>\n",
       "      <th>Votes45AM</th>\n",
       "      <th>Votes45AF</th>\n",
       "      <th>Votes1000</th>\n",
       "      <th>VotesUS</th>\n",
       "      <th>VotesnUS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Action</th>\n",
       "      <td>102144</td>\n",
       "      <td>114433</td>\n",
       "      <td>150895</td>\n",
       "      <td>94262</td>\n",
       "      <td>34688</td>\n",
       "      <td>12693</td>\n",
       "      <td>5386</td>\n",
       "      <td>3064</td>\n",
       "      <td>2115</td>\n",
       "      <td>5524</td>\n",
       "      <td>...</td>\n",
       "      <td>8.00</td>\n",
       "      <td>7.74</td>\n",
       "      <td>7.73</td>\n",
       "      <td>7.80</td>\n",
       "      <td>7.65</td>\n",
       "      <td>7.63</td>\n",
       "      <td>7.75</td>\n",
       "      <td>7.30</td>\n",
       "      <td>7.99</td>\n",
       "      <td>7.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Adventure</th>\n",
       "      <td>94596</td>\n",
       "      <td>105636</td>\n",
       "      <td>138482</td>\n",
       "      <td>86367</td>\n",
       "      <td>31896</td>\n",
       "      <td>11551</td>\n",
       "      <td>4817</td>\n",
       "      <td>2718</td>\n",
       "      <td>1835</td>\n",
       "      <td>4575</td>\n",
       "      <td>...</td>\n",
       "      <td>8.09</td>\n",
       "      <td>7.75</td>\n",
       "      <td>7.73</td>\n",
       "      <td>7.87</td>\n",
       "      <td>7.68</td>\n",
       "      <td>7.64</td>\n",
       "      <td>7.84</td>\n",
       "      <td>7.38</td>\n",
       "      <td>7.99</td>\n",
       "      <td>7.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Animation</th>\n",
       "      <td>61960</td>\n",
       "      <td>72566</td>\n",
       "      <td>104837</td>\n",
       "      <td>65707</td>\n",
       "      <td>22825</td>\n",
       "      <td>7551</td>\n",
       "      <td>2792</td>\n",
       "      <td>1430</td>\n",
       "      <td>911</td>\n",
       "      <td>2290</td>\n",
       "      <td>...</td>\n",
       "      <td>8.20</td>\n",
       "      <td>7.76</td>\n",
       "      <td>7.72</td>\n",
       "      <td>7.98</td>\n",
       "      <td>7.68</td>\n",
       "      <td>7.65</td>\n",
       "      <td>7.88</td>\n",
       "      <td>7.27</td>\n",
       "      <td>7.96</td>\n",
       "      <td>7.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Biography</th>\n",
       "      <td>47333</td>\n",
       "      <td>77867</td>\n",
       "      <td>123948</td>\n",
       "      <td>74054</td>\n",
       "      <td>23644</td>\n",
       "      <td>7702</td>\n",
       "      <td>2984</td>\n",
       "      <td>1639</td>\n",
       "      <td>1145</td>\n",
       "      <td>2849</td>\n",
       "      <td>...</td>\n",
       "      <td>7.93</td>\n",
       "      <td>7.73</td>\n",
       "      <td>7.72</td>\n",
       "      <td>7.77</td>\n",
       "      <td>7.69</td>\n",
       "      <td>7.66</td>\n",
       "      <td>7.87</td>\n",
       "      <td>7.23</td>\n",
       "      <td>7.93</td>\n",
       "      <td>7.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Comedy</th>\n",
       "      <td>60157</td>\n",
       "      <td>77173</td>\n",
       "      <td>108993</td>\n",
       "      <td>69176</td>\n",
       "      <td>26099</td>\n",
       "      <td>9863</td>\n",
       "      <td>4237</td>\n",
       "      <td>2444</td>\n",
       "      <td>1712</td>\n",
       "      <td>3842</td>\n",
       "      <td>...</td>\n",
       "      <td>7.95</td>\n",
       "      <td>7.71</td>\n",
       "      <td>7.71</td>\n",
       "      <td>7.75</td>\n",
       "      <td>7.61</td>\n",
       "      <td>7.60</td>\n",
       "      <td>7.70</td>\n",
       "      <td>7.19</td>\n",
       "      <td>7.94</td>\n",
       "      <td>7.78</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 44 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           CVotes10  CVotes09  CVotes08  CVotes07  CVotes06  CVotes05  \\\n",
       "Action       102144    114433    150895     94262     34688     12693   \n",
       "Adventure     94596    105636    138482     86367     31896     11551   \n",
       "Animation     61960     72566    104837     65707     22825      7551   \n",
       "Biography     47333     77867    123948     74054     23644      7702   \n",
       "Comedy        60157     77173    108993     69176     26099      9863   \n",
       "\n",
       "           CVotes04  CVotes03  CVotes02  CVotes01  ...  Votes1829F  Votes3044  \\\n",
       "Action         5386      3064      2115      5524  ...        8.00       7.74   \n",
       "Adventure      4817      2718      1835      4575  ...        8.09       7.75   \n",
       "Animation      2792      1430       911      2290  ...        8.20       7.76   \n",
       "Biography      2984      1639      1145      2849  ...        7.93       7.73   \n",
       "Comedy         4237      2444      1712      3842  ...        7.95       7.71   \n",
       "\n",
       "           Votes3044M  Votes3044F  Votes45A  Votes45AM  Votes45AF  Votes1000  \\\n",
       "Action           7.73        7.80      7.65       7.63       7.75       7.30   \n",
       "Adventure        7.73        7.87      7.68       7.64       7.84       7.38   \n",
       "Animation        7.72        7.98      7.68       7.65       7.88       7.27   \n",
       "Biography        7.72        7.77      7.69       7.66       7.87       7.23   \n",
       "Comedy           7.71        7.75      7.61       7.60       7.70       7.19   \n",
       "\n",
       "           VotesUS  VotesnUS  \n",
       "Action        7.99      7.76  \n",
       "Adventure     7.99      7.79  \n",
       "Animation     7.96      7.83  \n",
       "Biography     7.93      7.77  \n",
       "Comedy        7.94      7.78  \n",
       "\n",
       "[5 rows x 44 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Converting CVotes to int type\n",
    "\n",
    "cvotes_list_col = []\n",
    "for i in genre_top10.columns:\n",
    "    if i.startswith('CVotes'):\n",
    "        cvotes_list_col.append(i)\n",
    "\n",
    "genre_top10[cvotes_list_col] = genre_top10[cvotes_list_col].astype('int')\n",
    "genre_top10.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If you take a look at the final dataframe that you have gotten, you will see that you now have the complete information about all the demographic (Votes- and CVotes-related) columns across the top 10 genres. We can use this dataset to extract exciting insights about the voters!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-  ###  Subtask 3.2: Genre Counts!\n",
    "\n",
    "Now let's derive some insights from this data frame. Make a bar chart plotting different genres vs cnt using seaborn."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAiwAAAGQCAYAAACNlzt6AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdeVxN+eMG8Oe2oyzRNYbG2IphyKAyKGFIKbI2KMNMhlSWMfZtLGOdYbIzjK9l7Em2MGSbyvolsg/Z5U6pRHvn94df9+tq0VXdc06e9+s1r9fcc497n3O7dZ97Pp9zjkIQBAFEREREEqYndgAiIiKid2FhISIiIsljYSEiIiLJY2EhIiIiyWNhISIiIsljYSEiIiLJY2Ehnbh27Rqsra0xbtw49bLFixfD2toaf/31l3rZq1evMH78eNjZ2aFx48b4/vvvAQCrVq1C27Zt0ahRI7Rp0wavXr3S+TZoKy0tDWvXrhU7xgfD2toaXbt21Vh29+5dHDhw4J3raevFixfYuHGjxjIvLy9YW1sjKSmpSI9NBTt16hSioqLEjkEiYGEh0dja2sLPzw+1atVSL1u+fDmCgoJQo0YNDBgwAJ06dcLJkyfxyy+/ICsrC97e3ujZsyfKli0rYvLC6d+/P5YtWyZ2jA+Gn58fPD091bevX78ONzc3XLhwodifq1OnTti+fXuxPy4V7M8//8S3336LZ8+eiR2FRGAgdgD6cNnZ2cHOzk5j2dWrVwEAv/76K2rWrAkAWLlyJQAgICAAvXr10m3IIoiLixM7wgfF399f43ZiYiIyMjJK5Lni4uJgYWFRIo9N+ePv1IeNe1hIUtLT0wEAlSpVKnAZERF9WFhYqNhdv34dQ4cOha2tLVq0aIHx48cjISEh13pvzmE5ffo0rK2tcebMGQBAixYtYG1tDWtrayxZsgQAMGzYMFhbWyMoKEj9GBERERg4cCCaNWsGGxsb9OnTB6GhoRrP8/DhQ1hbW+O3337DzJkzYWNjAzs7O/XcBkEQsHnzZnh4eKBx48Zo0aIFhgwZot7bkyMnY1BQEHbs2AE3Nzd8/vnncHBwwNy5c5GSkqLxfI8ePcKLFy9yzd3Jz5YtW+Dm5oYmTZqgffv2WL16NYKDg2FtbY3Tp09rrBsdHQ1fX1/1XJ+uXbti8+bNePtKG+3atYOXlxf++ecfDBkyBM2aNUPTpk3h4+OD69ev57nuzp078eWXX6Jp06aYM2eOVq81ANy7dw/Dhw+Hk5MTGjVqhHbt2mHatGlQqVQFbn9AQACsra3x4MEDjeX+/v6wtrbGjh07NJavW7cO1tbWiIyMBKA5N2Xx4sXw9vYGAKxfvz7P1/DixYv45ptvYGNjA1tbWwQEBODhw4cFZsx5DwCv3+fW1tZYvHixxjqxsbEYM2YM7OzsYGNjg6+//hoRERG5His9PR0rV66Ei4sLPv/8c7Rs2RI//PBDru3P+T2JiIhAr1690KhRI3Tq1AkvX74EAKhUKkybNg0ODg7q13v+/PlITk4ucFve9Ndff8HLywvNmzeHnZ0dvvnmG5w9ezbXevv374enpydsbGzQtGlTeHp6Yt++fRrr5Lz/fX19c/37vOatFfY96uXlletvAX1YWFioWF27dg19+/bFyZMn0aZNG3Tp0gV///03fvzxxwL/XfXq1eHn54fq1asDAHx8fODn5wdvb2/Y2toCAFxcXODn54cGDRoAALZv346BAwfixo0bcHFxQZ8+fRAXF4fhw4djxYoVuZ5j27ZtOHDgAL7++mvY2NjAxsYGADB27FhMmzYNGRkZ8PT0hLOzM86dOwdPT888P2g2btyIadOmoV69evDy8oKxsTHWrl2LmTNnAgDKly8PPz8/mJmZwcjICH5+fujQoUOB2//zzz9j6tSpSE1NRa9evWBjY4NFixap/0C/6fjx4/D09ERkZCScnJzQv39/ZGdnY9q0aZgyZUqu9Z88eYKvv/4acXFx6N27N+zs7HDixAl4e3vn+lC7desWpk+fjg4dOsDZ2Vn9GhX2tY6Pj8c333yD48ePw9bWFgMHDkTdunWxefNmeHt7FzhE4+DgAADqAgK8LpM5JfbtD9CTJ0/C1NQUzZo1y/VYtra28PDwAAA0adJE470FAI8ePYKXlxcAoF+/fqhfvz4OHjyI/v37FzihO+d9CgBVqlSBn5+f+v2ZY8CAAbhy5Qq6d++O9u3b49KlS/j2228RHR2tXicjIwM+Pj749ddfUa5cOfTv3x9t2rTBoUOH0LNnT9y8eTPXc48ePRomJibw8vKCnZ0dypUrh8ePH6Nnz57YsmULGjZsiG+++Qa1atXC77//Di8vr0JNTl+5ciWGDRuGf/75B506dYKrqyuuXr2Kb775BqdOnVKvN3fuXIwcORIPHz5Ely5d4OrqiocPH2LUqFGYP3/+O5+nIIV5j3p4eOT6W0AfGIGoGPXr109o0KCBEB4erl4WFxcnuLi4CFZWVsLYsWPVywMDAwUrKyvh8OHD6mX9+/cXrKyshMTExALXe/LkidCoUSOhc+fOQnx8vHp5SkqK0KdPH6F+/frCjRs3BEEQhAcPHghWVlaCtbW1cO3aNY28+/fvF6ysrIRRo0YJGRkZ6uX3798XbG1thTZt2ghpaWmCIAhCZGSkYGVlJTRo0EC4cOGCet2kpCTB3t5e+Pzzz4WXL1+qlzs5OQnNmjV752sWFRUlWFtbC7179xaSk5PVy8PCwgQrKyvByspKiIyMFARBEF69eiXY29sL9vb2woMHD9TrZmVlCf7+/oKVlZVw7NgxjQxWVlbCTz/9JGRnZ6uXT5o0SbCyshK2b9+ea93169dr5NPmtd6wYYNgZWUl7NixQ+MxfvrpJ8HKykoICwvL93WIjY0VrK2thVGjRqmXRUdHC1ZWVoKNjY3g5OSkXp6amio0btxY8Pf3Vy+zsrIS3N3d1bdzfl4zZ87UeJ6c13T58uUay319fQUrKyvh0KFD+WbM77kE4X/vXR8fHyE9PV29/I8//hCsrKyEGTNmqJetXr1asLKyEubNm6fxc4mKihIaNmwo9OjRQ70s5/3fo0cPISsrS+M5fXx8BGtra+Ho0aMay//zn/8IVlZWwty5cwvcjjt37gifffaZ4OzsLDx79ky9PCYmRrCxsRG6dOkiCIIgnD17VrCyshK6desmxMXFqdeLi4sTunTpIlhZWQlnzpwRBOF/v29Dhw7N9Xx5/S5r8x7N69/Th4N7WKjYxMbG4uzZs2jTpg1atmypXm5ubo5hw4YV63OFhIQgPT0dAQEBGnNbTExMEBAQgOzsbOzatUvj39SsWRP169fXWJYzzDBx4kQYGPxvDrqlpSU8PT0RGxuL8PBwjX/TokULNG3aVH3bzMwMTZs2RVpaGp48eaL1tuzevRuCIGDEiBEoV66cennbtm3RqlUrjXWPHj2K+Ph4fPfdd6hRo4Z6uZ6eHn744QcAwM6dO3M9h4+PDxQKhfq2o6MjACAmJibXup06ddK4rc1rnZ2dDQC4dOkSsrKy1OuOHDkSp06dQtu2bfN9HZRKJRo0aKCxhyUyMhJ6enro0aMHHj16pH59z5w5g9TU1AIfryAmJiYYNGiQxrKcx3p7SEZbgwcPhqGhofp2u3btAEBjuGnHjh0wMzPDiBEjNH4un3/+OZydnXH58mXcunVL43G/+uor6On970/2s2fPcOLECTg6OsLJyUlj3f79+6NatWoaw6d5CQ0NRWZmJnx9fTUmEdesWRNjx45Fjx49kJGRoX6cMWPGwNzcXL2eubl5ge87bWjzHqUPE48SomKTM97cqFGjXPe9+QFfHK5cuQLg9byKt/+w5+wGf3uOxpsf8Dmio6NhbGyMTZs25brv7t27AF4Pc735wfjpp5/mWtfMzAwA3uuolMuXLwMAGjdunOu+L774An///bf6ds52R0dH55o7AQD6+vq5ttvY2BjVqlXTWGZqagrgfxOacxgaGkKpVGos0+a17tSpE5YuXYqtW7fi0KFDaN26NRwcHODo6Fioo2ocHBywYsUK3Lx5E1ZWVoiMjET9+vXRpk0bbNiwAWfPnoW7uztOnjwJhUKh/lDTVrVq1WBkZKSxLKeMFfUcPzlHt+WoWLEiAKjnnLx8+RJ3796FhYVFnkOX//77L4DX77t69eqpl785pAW8PqJOEAQkJCTk+V4wNDTEkydPEBsbi6pVq+aZNefnljP096a3DxHX09PLc/gtZ9nb7zttaPMepQ8XCwsVm5wTZr25lyBHhQoVivW5Xrx4AeD1RNX8JCYmatw2NjbO83EyMzPznCuS3+O8/UEHQP3NUHhr0mthPH/+HGXLls3zdXu7PORs99sTHYsrr4mJSa51tXmtq1atih07dmD58uU4cuQI9uzZgz179sDQ0BDdu3fHxIkT8/w55HB0dMSKFSsQERGB2rVr49y5c+jVqxeaNWsGfX19nDt3Tl1YPv/8c1SuXDnfxypIQRne52dY2McGoJ6ToVKptHrfvf2zyfl9u3jxIi5evJjv4yQkJORbWHIeI6ccFJTZ2Ng4z/eSmZkZypQpo550/j6K+3eKSicWFio25cuXB/C/D7g3FfeZaXNOHPfXX3/B0tKySI9Trlw5HDt2rJiSac/U1BQPHz5ERkaGxlACgFyTYnO2e926dRrDbiVJ29fa0tISP//8M7KysnDlyhWcPHkSQUFB2Lp1K8zMzAqcgN2kSRNUrFgRERERsLGxwcuXL2FrawtTU1N89tlnOHv2LB4/fow7d+7kOu+KXOS8ns2bN89zz562j+Pr64vhw4cX6TFevnyZ67QBqampMDIygp6eHsqVK4eUlBS8ePFCvTcxR1paGlJTU9X/vqCiUZRSQ8Q5LFRsPvvsMygUijzPLJozrFBccg5pzBlOeVNMTAzmzp2Lo0ePFupxnj59mucht2FhYVi4cGGRdnUXRsOGDZGVlaVxFEmOS5cuadzO2e68Xs+EhATMmjULu3fvLtZ82rzWR44cwbRp05CcnAx9fX31ETo5H8znz58v8Ln09fXRqlUrnDt3DmfOnIGenh6aN28O4PWJBu/cuYPg4GAAeOf8lTfnQ0iJmZkZPv74Y9y+fRupqam57g8ODsbixYvfeYh1Qe8FAAgMDMSqVasKHFKxsrICgDxPdT9z5kw0adIEDx48UM/9OnfuXK71zp8/D0EQULduXQBQl+68vqQUdX6QVH+mpBssLFRsLCws0KZNG0RGRuLgwYPq5cnJyQXu+n4f7u7u0NfXx6JFizTKRmZmJmbMmIG1a9fmee6Xt3l4eEAQBMyYMUPjD/uzZ88wbdo0rFq16r0vA2BoaIjMzMx3rte9e3cAwMKFCzW+gUZGRmqcrwJ4PfHS1NQUv//+u3qOTY758+dj/fr1uH///nvlzY82r/WdO3ewefNmbN68WeMxHj16BAD4+OOP3/l8Dg4OePHiBTZv3gxra2v1cGLOIa1r166FhYUFGjZsWODj5EyiLomz3RoaGhbpcT08PJCQkIAFCxaoJyoDwO3btzF9+nT88ccf6rkv+bG0tESLFi1w4sSJXOfDCQ4OxtKlS3Hy5Mk8h1tydOnSBXp6elixYgWeP3+uXn7//n0cOHAAlpaWsLS0VL9Hf/31V8THx6vXi4+Px7x58wBAfQ6cypUro0KFCoiKitI4M+3Vq1eLvCcz52fKeS0fJg4JUbGaMmUKPD09MWLECHTo0AFVq1ZFWFiYxtENxeHTTz/Fjz/+iDlz5qBLly5o164dKlSogBMnTuCff/6Bk5MT3N3d3/k43bt3x9GjR3Hw4EHcuHEDbdq0QWZmJg4cOICEhAT88MMP+OSTT94ro1KpRExMDEaPHo3WrVujW7duea6XcwKuLVu2oFu3bmjTpg3i4uJw6NAhmJmZ4fnz59DX1wfwetht5syZGD16NDw8PNChQwcolUqcOXMGly9fxueff57r6Jei0ua17t27N7Zt24YFCxbgzJkzsLa2RlxcHEJDQ1G2bFkMHjz4nc/n4OAAPT09PHr0SOP8Nc2bN4eBgQFevHiBTp06vfPbds68jQMHDqBs2bLw8PDQmMRaFEqlEnfu3MHUqVPh6OioPhKosAYPHoxTp05hw4YNOH/+PGxtbZGUlITQ0FCkpKRg/vz575xXAgDTp09Hv379MHz4cDg4OKBevXq4e/cujh07hooVK2Lq1KkF/vs6derAz88PgYGB6Nq1K5ycnCAIAvbv34+0tDTMnj0bwOsj4wYOHIg//vgD7u7u6qOSwsLCoFKp4OPjgxYtWgB4vZesR48eWLt2LXr16oVOnTohPj4eoaGhaNy4cZ57aQor52e6fPlyXLt2DX5+fu+cM0SlB/ewULGytLTE1q1b4eLigrNnz2Lnzp347LPPsHz58mJ/roEDB2LVqlWoX78+Dh06hK1bt8LAwADjxo1DYGCgxmHK+VEoFAgMDMTEiRNRpkwZbN++HQcOHEDdunWxdOnSQn3A5ufHH39EvXr1EBoa+s5hmilTpmDMmDEAXk9ujYqKwo8//ogePXoA0Jxw2blzZ2zcuBH29vY4efIkNm7ciJcvX8LX1xfr1q3Lc/JuURX2ta5QoQI2btyIr7/+GjExMfjPf/6DY8eOwcHBAdu2bct1WHlezM3N1UeavXlStnLlyqn3qhTmcObq1aurDxvetGlTsV7hd8qUKahRowZ27tyJI0eOaP3vTUxMsH79evj7+yMtLQ1//vknjh8/ji+++ALr16+Hm5tboR6ndu3aCAoKQu/evXHjxg2sX78eN27cQNeuXbFjxw71ME1Bhg0bhoULF6JatWrYvXs39uzZg8aNG2Pjxo1o0qSJer1x48Zh/vz5qF69Ovbs2YMDBw6gVq1aWLx4MUaPHq3xmKNGjVKfymDDhg2Ijo7G5MmTMXDgQC1epdxcXFzQuXNnPHjwAH/++ad6zx19GBQCp2ATiUqlUsHQ0DDPIYCxY8ciODgYf//9N6pUqSJCOiIiaeAeFiKRhYSEwM7OLteJ7u7fv4/Dhw+jbt26LCtE9MHjHhYikT19+hRubm5ISUlB+/btUbNmTahUKhw6dAjp6elYvXo17O3txY5JRCQqFhYiCbh37x5WrlyJyMhIqFQqlC9fHs2aNcP333//zqNhiIg+BCwsREREJHmcw0JERESSx8JCREREksfCQkRERJLHwkJERESSx8JCREREksfCQkRERJLHwkJERESSx8JCREREksfCQkRERJLHwkJERESSx8JCREREksfCQkRERJLHwkJERESSx8JCREREksfCQkRERJLHwkJERESSx8JCREREkmcgdoCiev78JbKzBbFjEBERURHo6SlQqVK5fO+XfWHJzhZYWIiIiEo5DgkRERGR5LGwEBERkeSxsBAREZHksbAQERGR5LGwEBERkeSxsBAREZHksbAQERGR5LGwEBERkeSxsBAREZHksbAQERGR5Mn+1PxERHJWqUIZGBhJ909xZnomniemiB2DiIWFiEhMBkYGuLTsmNgx8tXEt63YEYgAcEiIiIiIZICFhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCRPp4Xl6NGj6N69Ozp37oyZM2cCAMLDw+Hm5oaOHTti4cKFuoxDREREMqGzwvLgwQNMnToVy5YtQ0hICK5evYrjx49jwoQJWLZsGfbv348rV67g+PHjuopEREREMqGzwnL48GG4uLjgo48+gqGhIRYuXIgyZcqgZs2asLS0hIGBAdzc3BAaGqqrSERERCQTBrp6onv37sHQ0BBDhgzBkydP0LZtW9SrVw8WFhbqdZRKJWJjY3UViYiIiGRCZ4UlKysL586dw4YNG1C2bFkMHToUJiYmUCgU6nUEQdC4XRiVK5sWd1QiInqDhYWZ2BGIdFdYqlSpgpYtW8Lc3BwA0KFDB4SGhkJfX1+9jkqlglKp1Opx4+KSkZ0tFGtWIiJdkUMZUKleiB2BPgB6eooCd0LobA6Lk5MTTp06haSkJGRlZeHkyZNwdnbG3bt3ce/ePWRlZWHv3r1wcHDQVSQiIiKSCZ3tYWnSpAm+++479O3bFxkZGWjVqhW+/vpr1K5dG/7+/khLS4OjoyOcnZ11FYmIiIhkQiEIgqzHUzgkRERyZmFhhkvLjokdI19NfNtySIh0QjJDQkRERETvi4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkz0CXT+bl5YX4+HgYGLx+2unTp+Ply5eYPXs20tLS0LlzZ4wcOVKXkYiIiEgGdFZYBEFATEwMwsLC1IUlNTUVzs7O2LBhA6pVq4bvv/8ex48fh6Ojo65iERERkQzorLDcuXMHADBo0CAkJCSgd+/esLKyQs2aNWFpaQkAcHNzQ2hoKAsLERERadDZHJakpCS0bNkSS5cuxbp167BlyxY8fvwYFhYW6nWUSiViY2N1FYmIiIhkQmd7WJo2bYqmTZuqb/fs2ROBgYFo1qyZepkgCFAoFFo9buXKpsWWkYiIcrOwMBM7ApHuCsu5c+eQkZGBli1bAnhdTqpXrw6VSqVeR6VSQalUavW4cXHJyM4WijUrEZGuyKEMqFQvxI5AHwA9PUWBOyF0NiT04sULzJs3D2lpaUhOTsauXbswatQo3L17F/fu3UNWVhb27t0LBwcHXUUiIiIimdDZHhYnJydcunQJ3bp1Q3Z2Nvr27YumTZtizpw58Pf3R1paGhwdHeHs7KyrSERERCQTCkEQZD2ewiEhIpIzCwszXFp2TOwY+Wri25ZDQqQTkhkSIiIiInpfLCxEREQkeSwsREREJHksLERERCR5LCxEREQkeSwsREREJHksLERERCR5LCxEREQkeSwsREREJHksLERERCR5LCxEREQkeSwsREREJHksLERERCR5LCxEREQkeSwsREREJHksLERERCR5LCxEREQkeSwsREREJHksLERERCR5LCxEREQkeSwsREREJHksLERERCR5LCxEREQkeSwsREREJHksLERERCR5LCxEREQkeSwsREREJHksLERERCR5LCxEREQkeSwsREREJHksLERERCR5Oi8sc+fOxbhx4wAA4eHhcHNzQ8eOHbFw4UJdRyEiIiKZ0GlhiYiIwK5duwAAqampmDBhApYtW4b9+/fjypUrOH78uC7jEBERkUzorLAkJCRg4cKFGDJkCAAgKioKNWvWhKWlJQwMDODm5obQ0FBdxSEiIiIZ0VlhmTJlCkaOHIny5csDAJ49ewYLCwv1/UqlErGxsbqKQ0RERDJioIsn2b59O6pVq4aWLVsiKCgIAJCdnQ2FQqFeRxAEjduFVbmyabHlJCKi3CwszMSOQKSbwrJ//36oVCp07doViYmJePXqFR49egR9fX31OiqVCkqlUuvHjotLRna2UJxxiYh0Rg5lQKV6IXYE+gDo6SkK3Amhk8Lyxx9/qP8/KCgIZ86cwU8//YSOHTvi3r17qFGjBvbu3YsePXroIg4RERHJjE4KS16MjY0xZ84c+Pv7Iy0tDY6OjnB2dhYrDhEREUmYQhAEWY+ncEiIiOTMwsIMl5YdEztGvpr4tuWQEOnEu4aECn2UkLe3N5KSknItj4+PR/fu3d8vHREREVEhFDgkdOHCBdy/fx8AcPbsWYSEhMDUVLP93L59GzExMSUWkIiIiKjAwqKnp4dJkyYhZ9Ro9uzZGvcrFAqUK1cOvr6+JZeQiIiIPngFFhYbGxtcuXIFANCuXTvs2LED5ubmOgn2oatUwQgGRsZix8hXZnoaniemix2DiIg+EIU+Sujo0aMlmYPeYmBkjPPzvhM7Rr6ajfkdAAsLERHpRqELi0qlQmBgIC5evIj09NwfVAcPHizWYEREREQ5Cl1YpkyZggsXLqBr167q6wERERER6UKhC8v58+exaNEifPnllyWZh4iIiCiXQp+HxcjICFWrVi3JLERERER5KnRh6du3LwIDA5GSklKSeYiIiIhyKfSQ0IULF3D69Gm0aNECFhYWMDIy0rifk26JiIiopBS6sNjY2MDGxqYksxARERHlqdCFxc/PryRzEBEREeWr0IVlxYoVBd4/ZMiQIochIiIiykuhC8u2bds0bmdlZSEuLg4GBgb44osvWFiIiIioxBTp1PzJyckYP348mjVrVqyhiIiIiN5U6MOa82JqaoqAgACsXbu2uPIQERER5VKkwgIAL1++xIsXL4ojCxEREVGeijTpNjk5Gfv27YOdnV2xhiIiIiJ603tPugUAQ0ND2NnZYeTIkcUaioiIiOhNRZp0S0RERKQLhS4swOshoJCQENy6dQsGBgaoV68eXFxcYGpqWlL5iIiIiApfWB48eAAvLy8kJiaiTp06yM7Oxo4dO7Bs2TJs2rQJ1atXL8mcRERE9AEr9FFCc+bMwSeffIKjR49ix44dCAoKwpEjR/Dpp59i3rx5JZmRiIiIPnCFLiwREREYN24cKlWqpF5mbm6OH3/8ERERESUSjoiIiAjQorCYmJhATy/36np6esjMzCzWUERERERvKnRhsbOzw/z58zVOEpeUlIQFCxbwPCxERERUogo96XbMmDHw9PSEo6Mj6tSpAwC4ffs2KleuzFPzExERUYkqdGGpVq0a9u3bh927d+P27dtITU2Fp6cn3NzcYGRkVJIZiYiI6AP3ziGhM2fOwM3NDTdv3oSpqSn69euHqVOnIiEhAatXr0Z0dLQuchIREdEHrMA9LFeuXIGPjw/s7OxQrlw5jfsGDhyIlStXYuDAgdi6dSusra1LNGhhmZU3gYmxodgx8pWaloEXSciqWawAACAASURBVKlixyAiIpKVAgvL0qVL4eLigtmzZ+e6z9bWFra2tvD398eSJUuwePHidz7Zb7/9hoMHD0KhUKBnz54YOHAgwsPDMXv2bKSlpaFz585Fvi6RibEh+o7ZVKTHKEl/zuuHF2BhISIi0kaBQ0JRUVEYMGBAgQ8waNAgXLx48Z1PdObMGURGRiIkJAQ7d+7Ehg0bcP36dUyYMAHLli3D/v37ceXKFRw/fly7LSAiIqJSr8DC8urVq1xDQW+rUqUKkpOT3/lEtra2WL9+PQwMDBAXF4esrCwkJSWhZs2asLS0hIGBAdzc3BAaGqrdFhAREVGpV+CQ0KeffoqoqChYWlrmu05UVBSqVatWqCczNDREYGAg1q5dC2dnZzx79gwWFhbq+5VKJWJjYwsZ/bXKleV34UULCzOxIxSL0rIdRFQw/q6TFBRYWLp06YLffvsNdnZ2qFKlSq77VSoVFi1ahC5duhT6CQMCAuDj44MhQ4YgJiYGCoVCfZ8gCBq3CyMuLhnZ2YL6thx+sVSqF+9cp7RsBxEVjL/rRK/p6SkK3AlRYGHx9vZGaGgoXF1d0bNnTzRp0gRmZmZITEzEpUuXsHPnTtSoUQM+Pj7vDPLPP/8gPT0dDRo0QJkyZdCxY0eEhoZCX19fvY5KpYJSqdRi84iIiOhDUGBhMTQ0xIYNG7Bw4UJs374da9asUd9XuXJl9O7dG76+vihbtuw7n+jhw4cIDAzE5s2bAQBHjhyBp6cn5s2bh3v37qFGjRrYu3cvevToUcRNIiIiotLmnWe6NTExwfjx4zF69Gg8ePAASUlJqFSpEj755BOthm8cHR0RFRWFbt26QV9fHx07doSrqyvMzc3h7++PtLQ0ODo6wtnZuUgbRERERKVPoU/Nb2hoiNq1axfpyfz9/eHv76+xrGXLlggJCSnS4xIREVHpVuirNRMRERGJhYWFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkj4WFiIiIJI+FhYiIiCSPhYWIiIgkz0DsAESkWxXKl4GRsXR/9dPTMpGYlCJ2DCKSGOn+1SKiEmFkbICfJ+4QO0a+JszqKXYEIpIgDgkRERGR5LGwEBERkeSxsBAREZHksbAQERGR5LGwEBERkeSxsBAREZHk6bSwLFmyBK6urnB1dcW8efMAAOHh4XBzc0PHjh2xcOFCXcYhIiIimdBZYQkPD8epU6ewa9cuBAcHIzo6Gnv37sWECROwbNky7N+/H1euXMHx48d1FYmIiIhkQmeFxcLCAuPGjYORkREMDQ1Rp04dxMTEoGbNmrC0tISBgQHc3NwQGhqqq0hEREQkEzorLPXq1YONjQ0AICYmBgcOHIBCoYCFhYV6HaVSidjYWF1FIiIiIpnQ+an5b926he+//x5jxoyBvr4+YmJi1PcJggCFQqHV41WubFrMCUuehYWZ2BGKRWnZDpIevrekhT8PkgKdFpbz588jICAAEyZMgKurK86cOQOVSqW+X6VSQalUavWYcXHJyM4W1Lfl8IulUr145zqlZTtIevjekhb+PIhe09NTFLgTQmdDQk+ePMGwYcOwYMECuLq6AgCaNGmCu3fv4t69e8jKysLevXvh4OCgq0hEREQkEzrbw7JmzRqkpaVhzpw56mWenp6YM2cO/P39kZaWBkdHRzg7O+sqEhEREcmEzgrLpEmTMGnSpDzvCwkJ0VUMIiIikiGe6ZaIiIgkj4WFiIiIJI+FhYiIiCRP5+dhIZKrimZGMDQxFjtGvjJS05DwIl3sGEREJYKFhaiQDE2Msd97oNgx8uWy/g+AhYWISikOCREREZHksbAQERGR5HFIiIiI6A2VKhrDwNBI7Bj5ysxIx/OENLFj6BwLCxER0RsMDI1wYu80sWPky6HLNAAfXmHhkBARERFJHgsLERERSR4LCxEREUkeCwsRERFJHgsLERERSR4LCxEREUkeCwsRERFJHgsLERERSR4LCxEREUkeCwsRERFJHgsLERERSR4LCxEREUkeCwsRERFJHgsLERERSZ6B2AGIiKh0qFDBBEZGhmLHyFd6egYSE1PFjqEz5SuWgbGhdD/m0zIykZSQUuj1pbslREQkK0ZGhvjll1/EjpGvH374AcCHU1iMDQ0watdxsWPk61cPR63W55AQERERSR4LCxEREUkeCwsRERFJHgsLERERSR4LCxEREUkeCwsRERFJnk4Pa05OToanpydWrFiBGjVqIDw8HLNnz0ZaWho6d+6MkSNH6jIO6UD5CsYwNjISO0aB0tLTkZSYJnYM0lKF8kYwMjYWO0a+0tPSkJiULnYMolJDZ4Xl0qVLmDRpEmJiYgAAqampmDBhAjZs2IBq1arh+++/x/Hjx+HoqN1x2SRtxkZG+OaP4WLHKNC6gb8BYGGRGyNjY/w6/nuxY+Rr1OyVAFhYiIqLzoaEtm3bhqlTp0KpVAIAoqKiULNmTVhaWsLAwABubm4IDQ3VVRwiIiKSEZ3tYZk1a5bG7WfPnsHCwkJ9W6lUIjY2VldxiIiISEZEOzV/dnY2FAqF+rYgCBq3C6tyZdPijKUTFhZmYkcoFqVlO4DSsy3cDmnhdkhPadmWD3E7RCssH330EVQqlfq2SqVSDxdpIy4uGdnZgvq2HH6IKtWLd67D7dCt0rIt3A5p+ZC2Ayg928Lt0J03t0NPT1HgTgjRDmtu0qQJ7t69i3v37iErKwt79+6Fg4ODWHGIiIhIwkTbw2JsbIw5c+bA398faWlpcHR0hLOzs1hxiIiISMJ0XliOHj2q/v+WLVsiJCRE1xGIiIhIZnimWyIiIpI8FhYiIiKSPBYWIiIikjwWFiIiIpI8FhYiIiKSPBYWIiIikjwWFiIiIpI8FhYiIiKSPBYWIiIikjwWFiIiIpI8FhYiIiKSPBYWIiIikjwWFiIiIpI8FhYiIiKSPBYWIiIikjwWFiIiIpI8FhYiIiKSPBYWIiIikjwWFiIiIpI8FhYiIiKSPBYWIiIikjwWFiIiIpI8FhYiIiKSPBYWIiIikjwWFiIiIpI8FhYiIiKSPBYWIiIikjwWFiIiIpI8FhYiIiKSPBYWIiIikjwWFiIiIpI8SRSWPXv2wMXFBR07dsSmTZvEjkNEREQSYyB2gNjYWCxcuBBBQUEwMjKCp6cn7OzsULduXbGjERERkUSIvoclPDwc9vb2qFixIsqWLYtOnTohNDRU7FhEREQkIaLvYXn27BksLCzUt5VKJaKiogr97/X0FLmWValUrliylZS8MufFqHzlEk5SNIXdjiqm5iWcpOgKuy1lqpSOn0mFimVLOEnRFHY7ylcsHT8PQzOTEk5SNIXdDgAoX758CSYpusJui3GZiiWcpGgKux2VyhqXcJKieXM73rVNCkEQhJIOVJDly5cjLS0NI0aMAABs27YNV65cwfTp08WMRURERBIi+pDQRx99BJVKpb6tUqmgVCpFTERERERSI3ph+fLLLxEREYH4+HikpKTg0KFDcHBwEDsWERERSYjoc1iqVq2KkSNHwtvbGxkZGejZsycaN24sdiwiIiKSENHnsBARERG9i+hDQkRERETvwsJCREREksfCQkRERJLHwkJERESSx8JCREREksfCQkRERLlkZWWJHUEDD2t+S1BQEObOnYukpCQAgCAIUCgUuHbtmsjJtJOYmIj58+fj/v37CAwMxNy5czFu3DhUqFBB7GhaSUpKwp49e5CQkIA336p+fn4ipno/v//+O7p27apx7SyShsTERNn9bhCVNA8PD+zatUvsGGqinzhOapYtW4YNGzbAyspK7ChFMnnyZLRq1QpRUVEoW7YslEolfvzxR6xatUrsaFoZPnw4zMzMUK9ePSgUhb8AmxSlpqbCy8sLn3zyCTw8PNChQwcYGhqKHUtrrq6u8PDwKBXl69q1axg5ciRSU1OxdetW9O/fH4sWLULDhg3FjqaV+Ph4hISE4OXLlxAEAdnZ2Xj48CHmzZsndjStpKenY82aNbh79y6mTJmCdevWYfDgwTAyMhI7WqFs3boVffr0wZIlS/K8X25ftKpUqYJz586hcePGkvgZcEjoLUqlUvZlBQAePnyIPn36QE9PD0ZGRhg5ciSePn0qdiyt/fvvvwgMDIS/vz/8/PzU/8mRn58fQkNDMXjwYJw+fRpdu3bF9OnTZbf3btWqVUhLS4O3tzcGDx6M0NBQZGRkiB3rvcycORNLly5FxYoVUbVqVUybNg1Tp04VO5bWRowYgWvXriEkJAQpKSk4ePAg9PTk9+d9+vTpSElJwdWrV6Gvr4/79+9jwoQJYscqtNI2YHH58mX0798fjRs3RoMGDVC/fn00aNBAtDzcw/KWhg0b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\n",
      "text/plain": [
       "<Figure size 648x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Countplot for genres\n",
    "cnt = occ10.tolist()\n",
    "genre_top10['cnt'] = cnt\n",
    "\n",
    "plt.figure(figsize=[9,5])\n",
    "sns.barplot(x=genre_top10.index, y = genre_top10.cnt)\n",
    "plt.suptitle(\"different genres with there count\", fontsize=20)\n",
    "plt.xticks(rotation=90)\n",
    "plt.xlabel('Genre', fontsize= 15)\n",
    "plt.ylabel('Count', fontsize= 15)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**`Checkpoint 5:`** Is the bar for `Drama` the tallest?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-  ###  Subtask 3.3: Gender and Genre\n",
    "\n",
    "If you have closely looked at the Votes- and CVotes-related columns, you might have noticed the suffixes `F` and `M` indicating Female and Male. Since we have the vote counts for both males and females, across various age groups, let's now see how the popularity of genres vary between the two genders in the dataframe. \n",
    "\n",
    "1. Make the first heatmap to see how the average number of votes of males is varying across the genres. Use seaborn heatmap for this analysis. The X-axis should contain the four age-groups for males, i.e., `CVotesU18M`,`CVotes1829M`, `CVotes3044M`, and `CVotes45AM`. The Y-axis will have the genres and the annotation in the heatmap tell the average number of votes for that age-male group. \n",
    "\n",
    "2. Make the second heatmap to see how the average number of votes of females is varying across the genres. Use seaborn heatmap for this analysis. The X-axis should contain the four age-groups for females, i.e., `CVotesU18F`,`CVotes1829F`, `CVotes3044F`, and `CVotes45AF`. The Y-axis will have the genres and the annotation in the heatmap tell the average number of votes for that age-female group. \n",
    "\n",
    "3. Make sure that you plot these heatmaps side by side using `subplots` so that you can easily compare the two genders and derive insights.\n",
    "\n",
    "4. Write your any three inferences from this plot. You can make use of the previous bar plot also here for better insights.\n",
    "Refer to this link- https://seaborn.pydata.org/generated/seaborn.heatmap.html. You might have to plot something similar to the fifth chart in this page (You have to plot two such heatmaps side by side).\n",
    "\n",
    "5. Repeat subtasks 1 to 4, but now instead of taking the CVotes-related columns, you need to do the same process for the Votes-related columns. These heatmaps will show you how the two genders have rated movies across various genres.\n",
    "\n",
    "You might need the below link for formatting your heatmap.\n",
    "https://stackoverflow.com/questions/56942670/matplotlib-seaborn-first-and-last-row-cut-in-half-of-heatmap-plot\n",
    "\n",
    "-  Note : Use `genre_top10` dataframe for this subtask"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 1st set of heat maps for CVotes-related columns\n",
    "male_cvote_genre = genre_top10.groupby(genre_top10.index)['CVotesU18M','CVotes1829M', 'CVotes3044M', 'CVotes45AM'].mean()\n",
    "female_cvote_genre = genre_top10.groupby(genre_top10.index)['CVotesU18F','CVotes1829F', 'CVotes3044F', 'CVotes45AF'].mean()\n",
    "\n",
    "f,(ax1,ax2,axcb) = plt.subplots(1,3,gridspec_kw={'width_ratios':[1,1, 0.08]})\n",
    "ax1.get_shared_y_axes().join(ax1,ax2)\n",
    "g1 = sns.heatmap(male_cvote_genre,cmap=\"Greens\",annot=True, fmt ='d', cbar=False,ax=ax1)\n",
    "g1.set_ylabel('Genres', fontsize = 8)\n",
    "g1.set_xlabel('Male Age Group', fontsize = 8)\n",
    "g2 = sns.heatmap(female_cvote_genre, cmap=\"Greens\", annot = True, fmt ='d', cbar_ax=axcb, ax=ax2)\n",
    "g2.set_ylabel(' ')\n",
    "g2.set_xlabel('Female Age Group', fontsize = 8)\n",
    "g2.set_yticks([])\n",
    "\n",
    "#May needed to rotate the ticklabels correctly\n",
    "\n",
    "\n",
    "for ax in [g1,g2]:\n",
    "    t1 = ax.get_xticklabels()\n",
    "    ax.set_xticklabels(t1, rotation=90)\n",
    "    tly = ax.get_yticklabels()\n",
    "    ax.set_yticklabels(tly, rotation=0)\n",
    "plt.show()\n",
    "\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**`Inferences:`** A few inferences that can be seen from the heatmap above is that males have voted more than females, and Sci-Fi appears to be most popular among the 18-29 age group irrespective of their gender. What more can you infer from the two heatmaps that you have plotted? Write your three inferences/observations below:\n",
    "- Inference 1:<br>**Age ranging from 18–44 have voted the most irrespective of their gender**\n",
    "- Inference 2:<br>**Females on average (ages ranging from 18 to 44) voted movies of Action, Adventure, Animation, Comedy, Romance and Thriller more (after Sci-Fi) compared to males**\n",
    "- Inference 3:<br>**Under 18 Male voted more than Under 18 Female. In general, movies seem to be watched less by Under 18 and 45 Above irrespective of their age or they watched but didn’t vote**\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 2nd set of heat maps for Votes-related columns\n",
    "male_vote_genre = genre_top10.groupby(genre_top10.index)['VotesU18M','Votes1829M', 'Votes3044M', 'Votes45AM'].mean()\n",
    "female_vote_genre = genre_top10.groupby(genre_top10.index)['VotesU18F','Votes1829F', 'Votes3044F', 'Votes45AF'].mean()\n",
    "\n",
    "f,(ax1,ax2,axcb) = plt.subplots(1,3,gridspec_kw={'width_ratios':[1,1, 0.08]})\n",
    "ax1.get_shared_y_axes().join(ax1,ax2)\n",
    "g1 = sns.heatmap(male_vote_genre,cmap=\"coolwarm\",annot=True, cbar=False, ax=ax1)\n",
    "g1.set_ylabel('Genres', fontsize = 8)\n",
    "g1.set_xlabel('Male Age Group', fontsize = 8)\n",
    "g2 = sns.heatmap(female_vote_genre, cmap=\"coolwarm\", annot = True, cbar_ax=axcb, ax=ax2)\n",
    "g2.set_ylabel(' ')\n",
    "g2.set_xlabel('Male Age Group', fontsize = 8)\n",
    "g2.set_yticks([])\n",
    "\n",
    "#May needed to rotate the ticklabels correctly\n",
    "\n",
    "\n",
    "for ax in [g1,g2]:\n",
    "    t1 = ax.get_xticklabels()\n",
    "    ax.set_xticklabels(t1, rotation=90)\n",
    "    tly = ax.get_yticklabels()\n",
    "    ax.set_yticklabels(tly, rotation=0)\n",
    "plt.show()\n",
    "\n",
    "plt.tight_layout()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**`Inferences:`** Sci-Fi appears to be the highest rated genre in the age group of U18 for both males and females. Also, females in this age group have rated it a bit higher than the males in the same age group. What more can you infer from the two heatmaps that you have plotted? Write your three inferences/observations below:\n",
    "- Inference 1:<br>\n",
    "**The average number of votes for romance is less by male the average rating is more or less same as females, this means romance movies, in general, are watched less or voted less by males but the movies are good as they are rated well irrespective of gender especially for Under 18**\n",
    "- Inference 2:<br>\n",
    "**Irrespective of gender, age ranging from 30–45 have their average rating to different genres is around 7.7 to 7.8, most of them didn’t cross 8. A slight observation is (no causal relationship) that as your age increases you tend to become a critic**\n",
    "- Inference 3:<br>\n",
    "**We can see Animation genres has been voted steadily in Female gender, whereas in the male there is a significant difference (decrease) as age increases, It is interesting to observe that females of all age likes animation movies**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-  ###  Subtask 3.4: US vs non-US Cross Analysis\n",
    "\n",
    "The dataset contains both the US and non-US movies. Let's analyse how both the US and the non-US voters have responded to the US and the non-US movies.\n",
    "\n",
    "1. Create a column `IFUS` in the dataframe `movies`. The column `IFUS` should contain the value \"USA\" if the `Country` of the movie is \"USA\". For all other countries other than the USA, `IFUS` should contain the value `non-USA`.\n",
    "\n",
    "\n",
    "2. Now make a boxplot that shows how the number of votes from the US people i.e. `CVotesUS` is varying for the US and non-US movies. Make use of the column `IFUS` to make this plot. Similarly, make another subplot that shows how non US voters have voted for the US and non-US movies by plotting `CVotesnUS` for both the US and non-US movies. Write any of your two inferences/observations from these plots.\n",
    "\n",
    "\n",
    "3. Again do a similar analysis but with the ratings. Make a boxplot that shows how the ratings from the US people i.e. `VotesUS` is varying for the US and non-US movies. Similarly, make another subplot that shows how `VotesnUS` is varying for the US and non-US movies. Write any of your two inferences/observations from these plots.\n",
    "\n",
    "Note : Use `movies` dataframe for this subtask. Make use of this documention to format your boxplot - https://seaborn.pydata.org/generated/seaborn.boxplot.html"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Creating IFUS column\n",
    "movies ['IFUS'] = movies['Country'].apply(lambda x: 'USA' if x =='USA' else 'non-USA')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 720x720 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Box plot - 1: CVotesUS(y) vs IFUS(x)\n",
    "plt.figure(figsize=[10,10])\n",
    "fig, axes =plt.subplots(nrows=1, ncols=2)\n",
    "b1= sns.boxplot(x='IFUS', y = 'CVotesUS', data = movies, orient='V', ax = axes[0])\n",
    "b1.axes.set_title('Dist. of votes from USA People', fontsize = 12)\n",
    "b1.set_ylabel('CVotesUS', fontsize=15)\n",
    "b1.set_xlabel('IFUS', fontsize=15)\n",
    "\n",
    "b2= sns.boxplot(x='IFUS', y = 'CVotesnUS', data = movies, orient='V', ax = axes[1])\n",
    "b2.axes.set_title('Dist. of votes from Non-USA People', fontsize = 12)\n",
    "b2.set_ylabel('CVotesnUS', fontsize=15)\n",
    "b2.set_xlabel('IFUS', fontsize=15)\n",
    "\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**`Inferences:`** Write your two inferences/observations below:\n",
    "- Inference 1:<br>**We can see there is a significant difference in the number of votes from USA people for USA and non-USA movies. USA people voted less in number for non-USA movies**\n",
    "- Inference 2:<br>**We can observe the number of votes on average is more from non-USA people compared to USA people irrespective of the origin of the USA or non-USA movies**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 720x720 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Box plot - 2: VotesUS(y) vs IFUS(x)\n",
    "plt.figure(figsize=[10,10])\n",
    "fig, axes =plt.subplots(nrows=1, ncols=2)\n",
    "b1= sns.boxplot(x='IFUS', y = 'VotesUS', data = movies, orient='V', ax = axes[0])\n",
    "b1.axes.set_title('Dist. of votes from USA People', fontsize = 12)\n",
    "b1.set_ylabel('VotesUS', fontsize=15)\n",
    "b1.set_xlabel('IFUS', fontsize=15)\n",
    "\n",
    "b2= sns.boxplot(x='IFUS', y = 'VotesnUS', data = movies, orient='V', ax = axes[1])\n",
    "b2.axes.set_title('Dist. of votes from Non-USA People', fontsize = 12)\n",
    "b2.set_ylabel('VotesnUS', fontsize=15)\n",
    "b2.set_xlabel('IFUS', fontsize=15)\n",
    "\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**`Inferences:`** Write your two inferences/observations below:\n",
    "- Inference 1:<br>**On average we can see the median rating is higher (around 7.9 to 8) from USA people compared to that from non- USA people**\n",
    "- Inference 2:<br>**USA and non-USA people have rated non-USA movies significantly less than that of USA movies in other word difference for non-USA people is greater than that of USA people & distribution of rating for non-USA movies by USA people has a uniform distribution compared to others**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-  ###  Subtask 3.5:  Top 1000 Voters Vs Genres\n",
    "\n",
    "You might have also observed the column `CVotes1000`. This column represents the top 1000 voters on IMDb and gives the count for the number of these voters who have voted for a particular movie. Let's see how these top 1000 voters have voted across the genres. \n",
    "\n",
    "1. Sort the dataframe genre_top10 based on the value of `CVotes1000`in a descending order.\n",
    "\n",
    "2. Make a seaborn barplot for `genre` vs `CVotes1000`.\n",
    "\n",
    "3. Write your inferences. You can also try to relate it with the heatmaps you did in the previous subtasks.\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Sorting by CVotes1000\n",
    "genre_top10_Cvotes = genre_top10.sort_values(by='CVotes1000', ascending = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'CVotes1000')"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Bar plot\n",
    "plt.figure(figsize=[8,6])\n",
    "sns.barplot(x=genre_top10_Cvotes.index, y= genre_top10_Cvotes.CVotes1000)\n",
    "plt.title('Top 1000 Voters Vs Genres', fontsize = 20)\n",
    "plt.xlabel('Movies genres', fontsize = 20)\n",
    "plt.ylabel('CVotes1000', fontsize = 20)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**`Inferences:`** observations\n",
    "\n",
    "**The romance genre has been voted the least from the top 1000 voters**\n",
    ",**Sci-Fi is the most popular amongst the top 1000 voters**\n",
    ",**There is not a significant difference in popularity amongst Action, Thriller and Adventure, which makes sense also like these three, in general, goes hand in hand**\n",
    ",**If we compare this bar-chart with that of the previous we can see that the top 1000 IMDb voters prefer Sci-Fi over Drama and also the dataset contains movies from Drama more compared to other genres**\n",
    ",**We can see that even if Sci-Fi has very few movies in the data set (as depicted in the previous count- bar chart). In general, they got the most number of votes from Male, Female and also Top 1000 Imdb voters and also they have the highest rating across genders across their age group**."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**`Checkpoint 6:`** The genre `Romance` seems to be most unpopular among the top 1000 voters."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
